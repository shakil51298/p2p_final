{"ast":null,"code":"var _jsxFileName = \"/Users/mdkhalidhossain/CST/p2p-exchange/client/src/components/ChatModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport ReactCrop from 'react-image-crop';\nimport Modal from 'react-modal';\nimport 'react-image-crop/dist/ReactCrop.css';\n\n// Set app element for accessibility\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nconst ChatModal = ({\n  order,\n  user,\n  onClose\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [socket, setSocket] = useState(null);\n  const [typingUsers, setTypingUsers] = useState([]);\n  const [connectionError, setConnectionError] = useState('');\n  const [uploading, setUploading] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [filePreview, setFilePreview] = useState(null);\n  const [cropModalOpen, setCropModalOpen] = useState(false);\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [crop, setCrop] = useState({\n    unit: '%',\n    width: 100,\n    height: 100\n  });\n  const [completedCrop, setCompletedCrop] = useState(null);\n  const [imageRef, setImageRef] = useState(null);\n  const [fileCaption, setFileCaption] = useState('');\n  const [blurIntensity, setBlurIntensity] = useState(20);\n  const fileInputRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    // Initialize socket connection\n    const newSocket = io('http://localhost:50000', {\n      transports: ['websocket', 'polling']\n    });\n    newSocket.on('connect', () => {\n      console.log('🔵 Socket connected:', newSocket.id);\n      setConnectionError('');\n    });\n    newSocket.on('connect_error', error => {\n      console.error('🔴 Socket connection error:', error);\n      setConnectionError('Failed to connect to chat server');\n    });\n    newSocket.on('disconnect', reason => {\n      console.log('🔴 Socket disconnected:', reason);\n    });\n    setSocket(newSocket);\n\n    // Load chat messages\n    loadMessages();\n\n    // Join order room after connection is established\n    if (newSocket.connected) {\n      joinOrderRoom(newSocket);\n    } else {\n      newSocket.on('connect', () => {\n        joinOrderRoom(newSocket);\n      });\n    }\n\n    // Listen for new messages\n    newSocket.on('receive_message', message => {\n      console.log('💬 New message received:', message);\n      setMessages(prev => [...prev, message]);\n    });\n\n    // Listen for typing indicators\n    newSocket.on('user_typing', data => {\n      console.log('⌨️ User typing:', data);\n      setTypingUsers(prev => {\n        if (!prev.find(user => user.userId === data.userId)) {\n          return [...prev, data];\n        }\n        return prev;\n      });\n    });\n    newSocket.on('user_stop_typing', data => {\n      console.log('⌨️ User stopped typing:', data);\n      setTypingUsers(prev => prev.filter(user => user.userId !== data.userId));\n    });\n    return () => {\n      console.log('🔴 Cleaning up socket connection');\n      newSocket.disconnect();\n    };\n  }, [order.id]);\n  const joinOrderRoom = socket => {\n    console.log('🟡 Joining order room:', order.id);\n    socket.emit('join_order', order.id);\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, typingUsers]);\n  const loadMessages = async () => {\n    try {\n      console.log('🟡 Loading messages for order:', order.id);\n      const response = await axios.get(`http://localhost:50000/api/chat/messages/${order.id}`);\n      console.log('📨 Loaded messages:', response.data);\n\n      // Parse file_data from JSON string with error handling\n      const messagesWithFiles = response.data.map(message => {\n        try {\n          return {\n            ...message,\n            file_data: message.file_data ? JSON.parse(message.file_data) : null\n          };\n        } catch (error) {\n          console.error('🔴 Error parsing file_data for message:', message.id, error);\n          return {\n            ...message,\n            file_data: null\n          };\n        }\n      });\n      setMessages(messagesWithFiles);\n    } catch (error) {\n      console.error('🔴 Error loading messages:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const handleFileSelect = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setSelectedFile(file);\n      // Create preview\n      const reader = new FileReader();\n      reader.onload = e => {\n        setFilePreview(e.target.result);\n        setCropModalOpen(true);\n      };\n      reader.readAsDataURL(file);\n    }\n    // Reset file input\n    e.target.value = '';\n  };\n  const getCroppedImg = (image, crop, fileName) => {\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    const pixelRatio = window.devicePixelRatio;\n    canvas.width = crop.width * pixelRatio * scaleX;\n    canvas.height = crop.height * pixelRatio * scaleY;\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    ctx.imageSmoothingQuality = 'high';\n    ctx.drawImage(image, crop.x * scaleX, crop.y * scaleY, crop.width * scaleX, crop.height * scaleY, 0, 0, crop.width * scaleX, crop.height * scaleY);\n    return new Promise(resolve => {\n      canvas.toBlob(blob => {\n        if (!blob) {\n          console.error('Canvas is empty');\n          return;\n        }\n        blob.name = fileName;\n        resolve(blob);\n      }, selectedFile.type, 1);\n    });\n  };\n  const handleCropComplete = async () => {\n    if (imageRef && completedCrop && selectedFile && selectedFile.type.startsWith('image/')) {\n      try {\n        const croppedImageBlob = await getCroppedImg(imageRef, completedCrop, selectedFile.name);\n        const croppedFile = new File([croppedImageBlob], selectedFile.name, {\n          type: selectedFile.type\n        });\n        setSelectedFile(croppedFile);\n\n        // Create new preview from cropped image\n        const reader = new FileReader();\n        reader.onload = e => {\n          setFilePreview(e.target.result);\n        };\n        reader.readAsDataURL(croppedFile);\n      } catch (error) {\n        console.error('Error cropping image:', error);\n      }\n    }\n    setCropModalOpen(false);\n  };\n  const applyBlurEffect = () => {\n    if (!filePreview) return;\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    const img = new Image();\n    img.onload = () => {\n      canvas.width = img.width;\n      canvas.height = img.height;\n\n      // Apply blur\n      ctx.filter = `blur(${blurIntensity}px)`;\n      ctx.drawImage(img, 0, 0);\n\n      // Convert back to file\n      canvas.toBlob(blob => {\n        const blurredFile = new File([blob], `blurred-${selectedFile.name}`, {\n          type: selectedFile.type\n        });\n        setSelectedFile(blurredFile);\n        setFilePreview(canvas.toDataURL());\n      }, selectedFile.type);\n    };\n    img.src = filePreview;\n  };\n  const handleSendFile = async () => {\n    if (!selectedFile || !socket) return;\n    setUploading(true);\n    try {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      console.log('📤 Uploading file:', selectedFile.name);\n      const uploadResponse = await axios.post('http://localhost:50000/api/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log('🟢 File uploaded:', uploadResponse.data);\n\n      // Send file message via socket\n      if (socket && socket.connected) {\n        const messageData = {\n          orderId: order.id,\n          senderId: user.id,\n          senderName: user.name,\n          message: fileCaption || selectedFile.name,\n          messageType: 'file',\n          file: uploadResponse.data.file\n        };\n        console.log('📤 Sending file message:', messageData);\n        socket.emit('send_message', messageData);\n\n        // Reset file state\n        setSelectedFile(null);\n        setFilePreview(null);\n        setFileCaption('');\n        setEditModalOpen(false);\n      }\n    } catch (error) {\n      console.error('🔴 File upload error:', error);\n      alert('Failed to upload file. Please try again.');\n    } finally {\n      setUploading(false);\n    }\n  };\n  const cancelFileSend = () => {\n    setSelectedFile(null);\n    setFilePreview(null);\n    setFileCaption('');\n    setCropModalOpen(false);\n    setEditModalOpen(false);\n  };\n  const sendMessage = e => {\n    e.preventDefault();\n    if (!newMessage.trim() || !socket) {\n      console.log('🔴 Cannot send message - no socket or empty message');\n      return;\n    }\n    if (!socket.connected) {\n      setConnectionError('Not connected to chat server. Please try again.');\n      return;\n    }\n    const messageData = {\n      orderId: order.id,\n      senderId: user.id,\n      senderName: user.name,\n      message: newMessage.trim(),\n      messageType: 'text'\n    };\n    console.log('📤 Sending message:', messageData);\n    socket.emit('send_message', messageData);\n    setNewMessage('');\n  };\n  const handleTyping = () => {\n    if (socket && socket.connected) {\n      socket.emit('typing', {\n        orderId: order.id,\n        userId: user.id,\n        userName: user.name\n      });\n\n      // Stop typing after 1 second\n      setTimeout(() => {\n        if (socket && socket.connected) {\n          socket.emit('stop_typing', {\n            orderId: order.id,\n            userId: user.id\n          });\n        }\n      }, 1000);\n    }\n  };\n  const formatTime = timestamp => {\n    return new Date(timestamp).toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const isMyMessage = message => {\n    return message.sender_id === user.id;\n  };\n  const getOtherPartyName = () => {\n    if (user.id === order.buyer_id) {\n      return order.seller_name;\n    } else {\n      return order.buyer_name;\n    }\n  };\n  const getFileIcon = mimetype => {\n    if (!mimetype) return '📎';\n    if (mimetype.startsWith('image/')) return '🖼️';\n    if (mimetype === 'application/pdf') return '📄';\n    if (mimetype.includes('word') || mimetype.includes('document')) return '📝';\n    if (mimetype === 'text/plain') return '📃';\n    return '📎';\n  };\n  const formatFileSize = bytes => {\n    if (!bytes) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  // Safe function to check if message has file data\n  const hasFileData = message => {\n    return message && message.message_type === 'file' && message.file_data;\n  };\n\n  // Safe function to get file mimetype\n  const getFileMimetype = message => {\n    return hasFileData(message) ? message.file_data.mimetype : null;\n  };\n\n  // Safe function to get file original name\n  const getFileName = message => {\n    return hasFileData(message) ? message.file_data.originalname : '';\n  };\n\n  // Safe function to get file size\n  const getFileSize = message => {\n    return hasFileData(message) ? message.file_data.size : 0;\n  };\n\n  // Safe function to get file path\n  const getFilePath = message => {\n    return hasFileData(message) ? message.file_data.path : '';\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: \"Loading chat...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content chat-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uD83D\\uDCAC Trade Chat - Order #\", order.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"order-info\",\n            children: [\"Chatting with: \", getOtherPartyName()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"debug-info\",\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [\"Your ID: \", user.id, \" | Order ID: \", order.id, \" | Socket: \", socket !== null && socket !== void 0 && socket.connected ? '🟢 Connected' : '🔴 Disconnected']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this), connectionError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: connectionError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-order-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"trade-summary\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [order.amount, \" \", order.currency_from]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"arrow\",\n            children: \"\\u2192\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [order.total_price, \" \", order.currency_to]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"order-status\",\n          children: [\"Status: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `status-${order.status}`,\n            children: order.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-messages\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No messages yet. Start the conversation!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 13\n        }, this) : messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${isMyMessage(message) ? 'my-message' : 'other-message'}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: [hasFileData(message) ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-message\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"file-icon\",\n                  children: getFileIcon(getFileMimetype(message))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"file-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"file-name\",\n                    children: getFileName(message)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 468,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"file-size\",\n                    children: formatFileSize(getFileSize(message))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 469,\n                    columnNumber: 27\n                  }, this), message.message && message.message !== getFileName(message) && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"file-caption\",\n                    children: message.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 471,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 23\n              }, this), getFileMimetype(message) && getFileMimetype(message).startsWith('image/') ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"image-preview-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `http://localhost:50000${getFilePath(message)}`,\n                  alt: getFileName(message),\n                  className: \"image-preview blurred\",\n                  onLoad: e => {\n                    // Remove blur after image loads\n                    setTimeout(() => {\n                      e.target.classList.remove('blurred');\n                    }, 1000);\n                  },\n                  onError: e => {\n                    console.error('🔴 Error loading image:', getFilePath(message));\n                    e.target.style.display = 'none';\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 477,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: `http://localhost:50000${getFilePath(message)}`,\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  className: \"download-btn\",\n                  children: \"View Original\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 492,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(\"a\", {\n                href: `http://localhost:50000${getFilePath(message)}`,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                className: \"download-btn\",\n                children: \"Download\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-text\",\n              children: message.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-time\",\n              children: [formatTime(message.created_at), !isMyMessage(message) && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"sender-name\",\n                children: [\" \\u2022 \", message.sender_name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 17\n          }, this)\n        }, message.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 15\n        }, this)), typingUsers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"typing-indicator\",\n          children: typingUsers.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"typing-text\",\n            children: [user.userName, \" is typing...\"]\n          }, user.userId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 9\n      }, this), selectedFile && !cropModalOpen && !editModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-preview-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-preview-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uD83D\\uDCCE File Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-file-btn\",\n            onClick: cancelFileSend,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-preview-content\",\n          children: [selectedFile.type.startsWith('image/') ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: filePreview,\n            alt: \"Preview\",\n            className: \"file-preview-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-preview-generic\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-icon-large\",\n              children: getFileIcon(selectedFile.type)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-name\",\n                children: selectedFile.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 553,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-size\",\n                children: formatFileSize(selectedFile.size)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-caption-input\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: fileCaption,\n              onChange: e => setFileCaption(e.target.value),\n              placeholder: \"Add a caption (optional)\",\n              maxLength: \"200\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"edit-btn\",\n              onClick: () => setEditModalOpen(true),\n              disabled: !selectedFile.type.startsWith('image/'),\n              children: \"\\uD83C\\uDFA8 Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cancel-btn\",\n              onClick: cancelFileSend,\n              disabled: uploading,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"send-file-btn\",\n              onClick: handleSendFile,\n              disabled: uploading,\n              children: uploading ? '📤 Sending...' : '📤 Send File'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sendMessage,\n        className: \"chat-input-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            ref: fileInputRef,\n            onChange: handleFileSelect,\n            accept: \".jpg,.jpeg,.png,.gif,.pdf,.doc,.docx,.txt\",\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-buttons\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"file-btn\",\n              onClick: () => {\n                var _fileInputRef$current;\n                return (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n              },\n              disabled: uploading || !(socket !== null && socket !== void 0 && socket.connected) || selectedFile,\n              title: \"Upload File\",\n              children: \"\\uD83D\\uDCCE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newMessage,\n            onChange: e => {\n              setNewMessage(e.target.value);\n              handleTyping();\n            },\n            placeholder: \"Type your message...\",\n            maxLength: \"500\",\n            disabled: !(socket !== null && socket !== void 0 && socket.connected) || selectedFile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: !newMessage.trim() || !(socket !== null && socket !== void 0 && socket.connected) || selectedFile,\n            children: socket !== null && socket !== void 0 && socket.connected ? 'Send' : 'Connecting...'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-types-info\",\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"Supported: Images (JPG, PNG, GIF), PDF, DOC, DOCX, TXT (Max 10MB)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 637,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: cropModalOpen,\n        onRequestClose: cancelFileSend,\n        className: \"crop-modal\",\n        overlayClassName: \"crop-modal-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"crop-modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"crop-modal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\u2702\\uFE0F Crop Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 650,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"close-btn\",\n              onClick: cancelFileSend,\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"crop-area\",\n            children: selectedFile !== null && selectedFile !== void 0 && selectedFile.type.startsWith('image/') ? /*#__PURE__*/_jsxDEV(ReactCrop, {\n              crop: crop,\n              onChange: newCrop => setCrop(newCrop),\n              onComplete: c => setCompletedCrop(c),\n              aspect: 1,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                ref: setImageRef,\n                src: filePreview,\n                alt: \"Crop preview\",\n                onLoad: e => {\n                  const {\n                    width,\n                    height\n                  } = e.currentTarget;\n                  setCrop({\n                    unit: '%',\n                    width: 90,\n                    height: 90 * height / width\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 661,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 655,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-preview-generic\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"file-icon-large\",\n                children: getFileIcon(selectedFile === null || selectedFile === void 0 ? void 0 : selectedFile.type)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 677,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"file-name\",\n                  children: selectedFile === null || selectedFile === void 0 ? void 0 : selectedFile.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 679,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"file-size\",\n                  children: formatFileSize(selectedFile === null || selectedFile === void 0 ? void 0 : selectedFile.size)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 680,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 678,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 676,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"crop-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cancel-btn\",\n              onClick: cancelFileSend,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 686,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"confirm-btn\",\n              onClick: handleCropComplete,\n              children: selectedFile !== null && selectedFile !== void 0 && selectedFile.type.startsWith('image/') ? 'Apply Crop' : 'Continue'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 685,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: editModalOpen,\n        onRequestClose: cancelFileSend,\n        className: \"edit-modal\",\n        overlayClassName: \"edit-modal-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit-modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"edit-modal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\uD83C\\uDFA8 Edit Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 705,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"close-btn\",\n              onClick: cancelFileSend,\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 706,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 704,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"edit-tools\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tool-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Effects\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 711,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"effect-buttons\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"effect-btn\",\n                  onClick: applyBlurEffect,\n                  children: \"\\uD83D\\uDD0D Apply Blur\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 713,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\"Blur Intensity:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"range\",\n                    min: \"1\",\n                    max: \"50\",\n                    value: blurIntensity,\n                    onChange: e => setBlurIntensity(parseInt(e.target.value))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 718,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [blurIntensity, \"px\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 725,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 716,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 712,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 710,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 709,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"edit-preview-container\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: filePreview,\n              alt: \"Edit preview\",\n              className: \"edit-preview-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 732,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 731,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"edit-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cancel-btn\",\n              onClick: cancelFileSend,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 736,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"save-btn\",\n              onClick: () => setEditModalOpen(false),\n              children: \"\\uD83D\\uDCBE Done Editing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 739,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 735,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 417,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatModal, \"MX8u7H6l2bIKsk/bR5fDiCYDF6s=\");\n_c = ChatModal;\nexport default ChatModal;\nvar _c;\n$RefreshReg$(_c, \"ChatModal\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","axios","io","ReactCrop","Modal","jsxDEV","_jsxDEV","setAppElement","ChatModal","order","user","onClose","_s","messages","setMessages","newMessage","setNewMessage","loading","setLoading","socket","setSocket","typingUsers","setTypingUsers","connectionError","setConnectionError","uploading","setUploading","selectedFile","setSelectedFile","filePreview","setFilePreview","cropModalOpen","setCropModalOpen","editModalOpen","setEditModalOpen","crop","setCrop","unit","width","height","completedCrop","setCompletedCrop","imageRef","setImageRef","fileCaption","setFileCaption","blurIntensity","setBlurIntensity","fileInputRef","messagesEndRef","newSocket","transports","on","console","log","id","error","reason","loadMessages","connected","joinOrderRoom","message","prev","data","find","userId","filter","disconnect","emit","scrollToBottom","response","get","messagesWithFiles","map","file_data","JSON","parse","_messagesEndRef$curre","current","scrollIntoView","behavior","handleFileSelect","e","file","target","files","reader","FileReader","onload","result","readAsDataURL","value","getCroppedImg","image","fileName","canvas","document","createElement","ctx","getContext","scaleX","naturalWidth","scaleY","naturalHeight","pixelRatio","window","devicePixelRatio","setTransform","imageSmoothingQuality","drawImage","x","y","Promise","resolve","toBlob","blob","name","type","handleCropComplete","startsWith","croppedImageBlob","croppedFile","File","applyBlurEffect","img","Image","blurredFile","toDataURL","src","handleSendFile","formData","FormData","append","uploadResponse","post","headers","messageData","orderId","senderId","senderName","messageType","alert","cancelFileSend","sendMessage","preventDefault","trim","handleTyping","userName","setTimeout","formatTime","timestamp","Date","toLocaleTimeString","hour","minute","isMyMessage","sender_id","getOtherPartyName","buyer_id","seller_name","buyer_name","getFileIcon","mimetype","includes","formatFileSize","bytes","k","sizes","i","Math","floor","parseFloat","pow","toFixed","hasFileData","message_type","getFileMimetype","getFileName","originalname","getFileSize","size","getFilePath","path","className","children","_jsxFileName","lineNumber","columnNumber","onClick","amount","currency_from","total_price","currency_to","status","length","alt","onLoad","classList","remove","onError","style","display","href","rel","created_at","sender_name","ref","onChange","placeholder","maxLength","disabled","onSubmit","accept","_fileInputRef$current","click","title","isOpen","onRequestClose","overlayClassName","newCrop","onComplete","c","aspect","currentTarget","min","max","parseInt","_c","$RefreshReg$"],"sources":["/Users/mdkhalidhossain/CST/p2p-exchange/client/src/components/ChatModal.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport ReactCrop from 'react-image-crop';\nimport Modal from 'react-modal';\nimport 'react-image-crop/dist/ReactCrop.css';\n\n// Set app element for accessibility\nModal.setAppElement('#root');\n\nconst ChatModal = ({ order, user, onClose }) => {\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [socket, setSocket] = useState(null);\n  const [typingUsers, setTypingUsers] = useState([]);\n  const [connectionError, setConnectionError] = useState('');\n  const [uploading, setUploading] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [filePreview, setFilePreview] = useState(null);\n  const [cropModalOpen, setCropModalOpen] = useState(false);\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [crop, setCrop] = useState({ unit: '%', width: 100, height: 100 });\n  const [completedCrop, setCompletedCrop] = useState(null);\n  const [imageRef, setImageRef] = useState(null);\n  const [fileCaption, setFileCaption] = useState('');\n  const [blurIntensity, setBlurIntensity] = useState(20);\n\n  const fileInputRef = useRef(null);\n  const messagesEndRef = useRef(null);\n\n  useEffect(() => {\n    // Initialize socket connection\n    const newSocket = io('http://localhost:50000', {\n      transports: ['websocket', 'polling']\n    });\n\n    newSocket.on('connect', () => {\n      console.log('🔵 Socket connected:', newSocket.id);\n      setConnectionError('');\n    });\n\n    newSocket.on('connect_error', (error) => {\n      console.error('🔴 Socket connection error:', error);\n      setConnectionError('Failed to connect to chat server');\n    });\n\n    newSocket.on('disconnect', (reason) => {\n      console.log('🔴 Socket disconnected:', reason);\n    });\n\n    setSocket(newSocket);\n\n    // Load chat messages\n    loadMessages();\n\n    // Join order room after connection is established\n    if (newSocket.connected) {\n      joinOrderRoom(newSocket);\n    } else {\n      newSocket.on('connect', () => {\n        joinOrderRoom(newSocket);\n      });\n    }\n\n    // Listen for new messages\n    newSocket.on('receive_message', (message) => {\n      console.log('💬 New message received:', message);\n      setMessages(prev => [...prev, message]);\n    });\n\n    // Listen for typing indicators\n    newSocket.on('user_typing', (data) => {\n      console.log('⌨️ User typing:', data);\n      setTypingUsers(prev => {\n        if (!prev.find(user => user.userId === data.userId)) {\n          return [...prev, data];\n        }\n        return prev;\n      });\n    });\n\n    newSocket.on('user_stop_typing', (data) => {\n      console.log('⌨️ User stopped typing:', data);\n      setTypingUsers(prev => prev.filter(user => user.userId !== data.userId));\n    });\n\n    return () => {\n      console.log('🔴 Cleaning up socket connection');\n      newSocket.disconnect();\n    };\n  }, [order.id]);\n\n  const joinOrderRoom = (socket) => {\n    console.log('🟡 Joining order room:', order.id);\n    socket.emit('join_order', order.id);\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, typingUsers]);\n\n  const loadMessages = async () => {\n    try {\n      console.log('🟡 Loading messages for order:', order.id);\n      const response = await axios.get(`http://localhost:50000/api/chat/messages/${order.id}`);\n      console.log('📨 Loaded messages:', response.data);\n      \n      // Parse file_data from JSON string with error handling\n      const messagesWithFiles = response.data.map(message => {\n        try {\n          return {\n            ...message,\n            file_data: message.file_data ? JSON.parse(message.file_data) : null\n          };\n        } catch (error) {\n          console.error('🔴 Error parsing file_data for message:', message.id, error);\n          return {\n            ...message,\n            file_data: null\n          };\n        }\n      });\n      \n      setMessages(messagesWithFiles);\n    } catch (error) {\n      console.error('🔴 Error loading messages:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const handleFileSelect = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      setSelectedFile(file);\n      // Create preview\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        setFilePreview(e.target.result);\n        setCropModalOpen(true);\n      };\n      reader.readAsDataURL(file);\n    }\n    // Reset file input\n    e.target.value = '';\n  };\n\n  const getCroppedImg = (image, crop, fileName) => {\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    const pixelRatio = window.devicePixelRatio;\n\n    canvas.width = crop.width * pixelRatio * scaleX;\n    canvas.height = crop.height * pixelRatio * scaleY;\n\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    ctx.imageSmoothingQuality = 'high';\n\n    ctx.drawImage(\n      image,\n      crop.x * scaleX,\n      crop.y * scaleY,\n      crop.width * scaleX,\n      crop.height * scaleY,\n      0,\n      0,\n      crop.width * scaleX,\n      crop.height * scaleY\n    );\n\n    return new Promise((resolve) => {\n      canvas.toBlob(\n        (blob) => {\n          if (!blob) {\n            console.error('Canvas is empty');\n            return;\n          }\n          blob.name = fileName;\n          resolve(blob);\n        },\n        selectedFile.type,\n        1\n      );\n    });\n  };\n\n  const handleCropComplete = async () => {\n    if (imageRef && completedCrop && selectedFile && selectedFile.type.startsWith('image/')) {\n      try {\n        const croppedImageBlob = await getCroppedImg(\n          imageRef,\n          completedCrop,\n          selectedFile.name\n        );\n        const croppedFile = new File([croppedImageBlob], selectedFile.name, { type: selectedFile.type });\n        setSelectedFile(croppedFile);\n        \n        // Create new preview from cropped image\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          setFilePreview(e.target.result);\n        };\n        reader.readAsDataURL(croppedFile);\n      } catch (error) {\n        console.error('Error cropping image:', error);\n      }\n    }\n    setCropModalOpen(false);\n  };\n\n  const applyBlurEffect = () => {\n    if (!filePreview) return;\n\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    const img = new Image();\n    \n    img.onload = () => {\n      canvas.width = img.width;\n      canvas.height = img.height;\n      \n      // Apply blur\n      ctx.filter = `blur(${blurIntensity}px)`;\n      ctx.drawImage(img, 0, 0);\n      \n      // Convert back to file\n      canvas.toBlob((blob) => {\n        const blurredFile = new File([blob], `blurred-${selectedFile.name}`, { type: selectedFile.type });\n        setSelectedFile(blurredFile);\n        setFilePreview(canvas.toDataURL());\n      }, selectedFile.type);\n    };\n    \n    img.src = filePreview;\n  };\n\n  const handleSendFile = async () => {\n    if (!selectedFile || !socket) return;\n\n    setUploading(true);\n    try {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n\n      console.log('📤 Uploading file:', selectedFile.name);\n      \n      const uploadResponse = await axios.post('http://localhost:50000/api/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      console.log('🟢 File uploaded:', uploadResponse.data);\n\n      // Send file message via socket\n      if (socket && socket.connected) {\n        const messageData = {\n          orderId: order.id,\n          senderId: user.id,\n          senderName: user.name,\n          message: fileCaption || selectedFile.name,\n          messageType: 'file',\n          file: uploadResponse.data.file\n        };\n\n        console.log('📤 Sending file message:', messageData);\n        socket.emit('send_message', messageData);\n        \n        // Reset file state\n        setSelectedFile(null);\n        setFilePreview(null);\n        setFileCaption('');\n        setEditModalOpen(false);\n      }\n\n    } catch (error) {\n      console.error('🔴 File upload error:', error);\n      alert('Failed to upload file. Please try again.');\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  const cancelFileSend = () => {\n    setSelectedFile(null);\n    setFilePreview(null);\n    setFileCaption('');\n    setCropModalOpen(false);\n    setEditModalOpen(false);\n  };\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n    if (!newMessage.trim() || !socket) {\n      console.log('🔴 Cannot send message - no socket or empty message');\n      return;\n    }\n\n    if (!socket.connected) {\n      setConnectionError('Not connected to chat server. Please try again.');\n      return;\n    }\n\n    const messageData = {\n      orderId: order.id,\n      senderId: user.id,\n      senderName: user.name,\n      message: newMessage.trim(),\n      messageType: 'text'\n    };\n\n    console.log('📤 Sending message:', messageData);\n    socket.emit('send_message', messageData);\n    setNewMessage('');\n  };\n\n  const handleTyping = () => {\n    if (socket && socket.connected) {\n      socket.emit('typing', {\n        orderId: order.id,\n        userId: user.id,\n        userName: user.name\n      });\n\n      // Stop typing after 1 second\n      setTimeout(() => {\n        if (socket && socket.connected) {\n          socket.emit('stop_typing', {\n            orderId: order.id,\n            userId: user.id\n          });\n        }\n      }, 1000);\n    }\n  };\n\n  const formatTime = (timestamp) => {\n    return new Date(timestamp).toLocaleTimeString([], { \n      hour: '2-digit', \n      minute: '2-digit' \n    });\n  };\n\n  const isMyMessage = (message) => {\n    return message.sender_id === user.id;\n  };\n\n  const getOtherPartyName = () => {\n    if (user.id === order.buyer_id) {\n      return order.seller_name;\n    } else {\n      return order.buyer_name;\n    }\n  };\n\n  const getFileIcon = (mimetype) => {\n    if (!mimetype) return '📎';\n    if (mimetype.startsWith('image/')) return '🖼️';\n    if (mimetype === 'application/pdf') return '📄';\n    if (mimetype.includes('word') || mimetype.includes('document')) return '📝';\n    if (mimetype === 'text/plain') return '📃';\n    return '📎';\n  };\n\n  const formatFileSize = (bytes) => {\n    if (!bytes) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  // Safe function to check if message has file data\n  const hasFileData = (message) => {\n    return message && message.message_type === 'file' && message.file_data;\n  };\n\n  // Safe function to get file mimetype\n  const getFileMimetype = (message) => {\n    return hasFileData(message) ? message.file_data.mimetype : null;\n  };\n\n  // Safe function to get file original name\n  const getFileName = (message) => {\n    return hasFileData(message) ? message.file_data.originalname : '';\n  };\n\n  // Safe function to get file size\n  const getFileSize = (message) => {\n    return hasFileData(message) ? message.file_data.size : 0;\n  };\n\n  // Safe function to get file path\n  const getFilePath = (message) => {\n    return hasFileData(message) ? message.file_data.path : '';\n  };\n\n  if (loading) {\n    return (\n      <div className=\"modal-overlay\">\n        <div className=\"modal-content\">\n          <div className=\"loading\">Loading chat...</div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-content chat-modal\">\n        <div className=\"chat-header\">\n          <div className=\"chat-title\">\n            <h3>💬 Trade Chat - Order #{order.id}</h3>\n            <div className=\"order-info\">\n              Chatting with: {getOtherPartyName()}\n            </div>\n            <div className=\"debug-info\">\n              <small>Your ID: {user.id} | Order ID: {order.id} | Socket: {socket?.connected ? '🟢 Connected' : '🔴 Disconnected'}</small>\n            </div>\n          </div>\n          <button className=\"close-btn\" onClick={onClose}>×</button>\n        </div>\n\n        {connectionError && (\n          <div className=\"error-message\">\n            {connectionError}\n          </div>\n        )}\n\n        <div className=\"chat-order-details\">\n          <div className=\"trade-summary\">\n            <span>{order.amount} {order.currency_from}</span>\n            <span className=\"arrow\">→</span>\n            <span>{order.total_price} {order.currency_to}</span>\n          </div>\n          <div className=\"order-status\">\n            Status: <span className={`status-${order.status}`}>{order.status}</span>\n          </div>\n        </div>\n\n        <div className=\"chat-messages\">\n          {messages.length === 0 ? (\n            <div className=\"no-messages\">\n              <p>No messages yet. Start the conversation!</p>\n            </div>\n          ) : (\n            messages.map((message) => (\n              <div\n                key={message.id}\n                className={`message ${isMyMessage(message) ? 'my-message' : 'other-message'}`}\n              >\n                <div className=\"message-content\">\n                  {hasFileData(message) ? (\n                    <div className=\"file-message\">\n                      <div className=\"file-info\">\n                        <span className=\"file-icon\">\n                          {getFileIcon(getFileMimetype(message))}\n                        </span>\n                        <div className=\"file-details\">\n                          <div className=\"file-name\">{getFileName(message)}</div>\n                          <div className=\"file-size\">{formatFileSize(getFileSize(message))}</div>\n                          {message.message && message.message !== getFileName(message) && (\n                            <div className=\"file-caption\">{message.message}</div>\n                          )}\n                        </div>\n                      </div>\n                      {getFileMimetype(message) && getFileMimetype(message).startsWith('image/') ? (\n                        <div className=\"image-preview-container\">\n                          <img \n                            src={`http://localhost:50000${getFilePath(message)}`}\n                            alt={getFileName(message)}\n                            className=\"image-preview blurred\"\n                            onLoad={(e) => {\n                              // Remove blur after image loads\n                              setTimeout(() => {\n                                e.target.classList.remove('blurred');\n                              }, 1000);\n                            }}\n                            onError={(e) => {\n                              console.error('🔴 Error loading image:', getFilePath(message));\n                              e.target.style.display = 'none';\n                            }}\n                          />\n                          <a \n                            href={`http://localhost:50000${getFilePath(message)}`} \n                            target=\"_blank\" \n                            rel=\"noopener noreferrer\"\n                            className=\"download-btn\"\n                          >\n                            View Original\n                          </a>\n                        </div>\n                      ) : (\n                        <a \n                          href={`http://localhost:50000${getFilePath(message)}`} \n                          target=\"_blank\" \n                          rel=\"noopener noreferrer\"\n                          className=\"download-btn\"\n                        >\n                          Download\n                        </a>\n                      )}\n                    </div>\n                  ) : (\n                    <div className=\"message-text\">{message.message}</div>\n                  )}\n                  <div className=\"message-time\">\n                    {formatTime(message.created_at)}\n                    {!isMyMessage(message) && (\n                      <span className=\"sender-name\"> • {message.sender_name}</span>\n                    )}\n                  </div>\n                </div>\n              </div>\n            ))\n          )}\n          \n          {typingUsers.length > 0 && (\n            <div className=\"typing-indicator\">\n              {typingUsers.map(user => (\n                <div key={user.userId} className=\"typing-text\">\n                  {user.userName} is typing...\n                </div>\n              ))}\n            </div>\n          )}\n          \n          <div ref={messagesEndRef} />\n        </div>\n\n        {/* File Preview Section */}\n        {selectedFile && !cropModalOpen && !editModalOpen && (\n          <div className=\"file-preview-section\">\n            <div className=\"file-preview-header\">\n              <h4>📎 File Preview</h4>\n              <button className=\"cancel-file-btn\" onClick={cancelFileSend}>×</button>\n            </div>\n            <div className=\"file-preview-content\">\n              {selectedFile.type.startsWith('image/') ? (\n                <img src={filePreview} alt=\"Preview\" className=\"file-preview-image\" />\n              ) : (\n                <div className=\"file-preview-generic\">\n                  <span className=\"file-icon-large\">{getFileIcon(selectedFile.type)}</span>\n                  <div className=\"file-details\">\n                    <div className=\"file-name\">{selectedFile.name}</div>\n                    <div className=\"file-size\">{formatFileSize(selectedFile.size)}</div>\n                  </div>\n                </div>\n              )}\n              <div className=\"file-caption-input\">\n                <input\n                  type=\"text\"\n                  value={fileCaption}\n                  onChange={(e) => setFileCaption(e.target.value)}\n                  placeholder=\"Add a caption (optional)\"\n                  maxLength=\"200\"\n                />\n              </div>\n              <div className=\"file-actions\">\n                <button \n                  className=\"edit-btn\"\n                  onClick={() => setEditModalOpen(true)}\n                  disabled={!selectedFile.type.startsWith('image/')}\n                >\n                  🎨 Edit\n                </button>\n                <button \n                  className=\"cancel-btn\" \n                  onClick={cancelFileSend}\n                  disabled={uploading}\n                >\n                  Cancel\n                </button>\n                <button \n                  className=\"send-file-btn\" \n                  onClick={handleSendFile}\n                  disabled={uploading}\n                >\n                  {uploading ? '📤 Sending...' : '📤 Send File'}\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        <form onSubmit={sendMessage} className=\"chat-input-form\">\n          <div className=\"input-group\">\n            <input\n              type=\"file\"\n              ref={fileInputRef}\n              onChange={handleFileSelect}\n              accept=\".jpg,.jpeg,.png,.gif,.pdf,.doc,.docx,.txt\"\n              style={{ display: 'none' }}\n            />\n            \n            <div className=\"file-buttons\">\n              <button \n                type=\"button\" \n                className=\"file-btn\"\n                onClick={() => fileInputRef.current?.click()}\n                disabled={uploading || !socket?.connected || selectedFile}\n                title=\"Upload File\"\n              >\n                📎\n              </button>\n            </div>\n            \n            <input\n              type=\"text\"\n              value={newMessage}\n              onChange={(e) => {\n                setNewMessage(e.target.value);\n                handleTyping();\n              }}\n              placeholder=\"Type your message...\"\n              maxLength=\"500\"\n              disabled={!socket?.connected || selectedFile}\n            />\n            \n            <button \n              type=\"submit\" \n              disabled={!newMessage.trim() || !socket?.connected || selectedFile}\n            >\n              {socket?.connected ? 'Send' : 'Connecting...'}\n            </button>\n          </div>\n          \n          <div className=\"file-types-info\">\n            <small>Supported: Images (JPG, PNG, GIF), PDF, DOC, DOCX, TXT (Max 10MB)</small>\n          </div>\n        </form>\n\n        {/* Crop Modal */}\n        <Modal\n          isOpen={cropModalOpen}\n          onRequestClose={cancelFileSend}\n          className=\"crop-modal\"\n          overlayClassName=\"crop-modal-overlay\"\n        >\n          <div className=\"crop-modal-content\">\n            <div className=\"crop-modal-header\">\n              <h3>✂️ Crop Image</h3>\n              <button className=\"close-btn\" onClick={cancelFileSend}>×</button>\n            </div>\n            <div className=\"crop-area\">\n              {selectedFile?.type.startsWith('image/') ? (\n                <ReactCrop\n                  crop={crop}\n                  onChange={(newCrop) => setCrop(newCrop)}\n                  onComplete={(c) => setCompletedCrop(c)}\n                  aspect={1}\n                >\n                  <img\n                    ref={setImageRef}\n                    src={filePreview}\n                    alt=\"Crop preview\"\n                    onLoad={(e) => {\n                      const { width, height } = e.currentTarget;\n                      setCrop({\n                        unit: '%',\n                        width: 90,\n                        height: (90 * height) / width,\n                      });\n                    }}\n                  />\n                </ReactCrop>\n              ) : (\n                <div className=\"file-preview-generic\">\n                  <span className=\"file-icon-large\">{getFileIcon(selectedFile?.type)}</span>\n                  <div className=\"file-details\">\n                    <div className=\"file-name\">{selectedFile?.name}</div>\n                    <div className=\"file-size\">{formatFileSize(selectedFile?.size)}</div>\n                  </div>\n                </div>\n              )}\n            </div>\n            <div className=\"crop-actions\">\n              <button className=\"cancel-btn\" onClick={cancelFileSend}>\n                Cancel\n              </button>\n              <button className=\"confirm-btn\" onClick={handleCropComplete}>\n                {selectedFile?.type.startsWith('image/') ? 'Apply Crop' : 'Continue'}\n              </button>\n            </div>\n          </div>\n        </Modal>\n\n        {/* Simple Edit Modal */}\n        <Modal\n          isOpen={editModalOpen}\n          onRequestClose={cancelFileSend}\n          className=\"edit-modal\"\n          overlayClassName=\"edit-modal-overlay\"\n        >\n          <div className=\"edit-modal-content\">\n            <div className=\"edit-modal-header\">\n              <h3>🎨 Edit Image</h3>\n              <button className=\"close-btn\" onClick={cancelFileSend}>×</button>\n            </div>\n            \n            <div className=\"edit-tools\">\n              <div className=\"tool-section\">\n                <h4>Effects</h4>\n                <div className=\"effect-buttons\">\n                  <button className=\"effect-btn\" onClick={applyBlurEffect}>\n                    🔍 Apply Blur\n                  </button>\n                  <label>\n                    Blur Intensity:\n                    <input \n                      type=\"range\" \n                      min=\"1\" \n                      max=\"50\" \n                      value={blurIntensity} \n                      onChange={(e) => setBlurIntensity(parseInt(e.target.value))}\n                    />\n                    <span>{blurIntensity}px</span>\n                  </label>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"edit-preview-container\">\n              <img src={filePreview} alt=\"Edit preview\" className=\"edit-preview-image\" />\n            </div>\n\n            <div className=\"edit-actions\">\n              <button className=\"cancel-btn\" onClick={cancelFileSend}>\n                Cancel\n              </button>\n              <button className=\"save-btn\" onClick={() => setEditModalOpen(false)}>\n                💾 Done Editing\n              </button>\n            </div>\n          </div>\n        </Modal>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatModal;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AACvE,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAOC,SAAS,MAAM,kBAAkB;AACxC,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAO,qCAAqC;;AAE5C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAF,KAAK,CAACG,aAAa,CAAC,OAAO,CAAC;AAE5B,MAAMC,SAAS,GAAGA,CAAC;EAAEC,KAAK;EAAEC,IAAI;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACsB,MAAM,EAAEC,SAAS,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACwB,WAAW,EAAEC,cAAc,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC0B,eAAe,EAAEC,kBAAkB,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAAC4B,SAAS,EAAEC,YAAY,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC8B,YAAY,EAAEC,eAAe,CAAC,GAAG/B,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACgC,WAAW,EAAEC,cAAc,CAAC,GAAGjC,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACkC,aAAa,EAAEC,gBAAgB,CAAC,GAAGnC,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACoC,aAAa,EAAEC,gBAAgB,CAAC,GAAGrC,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACsC,IAAI,EAAEC,OAAO,CAAC,GAAGvC,QAAQ,CAAC;IAAEwC,IAAI,EAAE,GAAG;IAAEC,KAAK,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,CAAC;EACxE,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAG5C,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAAC6C,QAAQ,EAAEC,WAAW,CAAC,GAAG9C,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAAC+C,WAAW,EAAEC,cAAc,CAAC,GAAGhD,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACiD,aAAa,EAAEC,gBAAgB,CAAC,GAAGlD,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMmD,YAAY,GAAGjD,MAAM,CAAC,IAAI,CAAC;EACjC,MAAMkD,cAAc,GAAGlD,MAAM,CAAC,IAAI,CAAC;EAEnCD,SAAS,CAAC,MAAM;IACd;IACA,MAAMoD,SAAS,GAAGhD,EAAE,CAAC,wBAAwB,EAAE;MAC7CiD,UAAU,EAAE,CAAC,WAAW,EAAE,SAAS;IACrC,CAAC,CAAC;IAEFD,SAAS,CAACE,EAAE,CAAC,SAAS,EAAE,MAAM;MAC5BC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEJ,SAAS,CAACK,EAAE,CAAC;MACjD/B,kBAAkB,CAAC,EAAE,CAAC;IACxB,CAAC,CAAC;IAEF0B,SAAS,CAACE,EAAE,CAAC,eAAe,EAAGI,KAAK,IAAK;MACvCH,OAAO,CAACG,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDhC,kBAAkB,CAAC,kCAAkC,CAAC;IACxD,CAAC,CAAC;IAEF0B,SAAS,CAACE,EAAE,CAAC,YAAY,EAAGK,MAAM,IAAK;MACrCJ,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEG,MAAM,CAAC;IAChD,CAAC,CAAC;IAEFrC,SAAS,CAAC8B,SAAS,CAAC;;IAEpB;IACAQ,YAAY,CAAC,CAAC;;IAEd;IACA,IAAIR,SAAS,CAACS,SAAS,EAAE;MACvBC,aAAa,CAACV,SAAS,CAAC;IAC1B,CAAC,MAAM;MACLA,SAAS,CAACE,EAAE,CAAC,SAAS,EAAE,MAAM;QAC5BQ,aAAa,CAACV,SAAS,CAAC;MAC1B,CAAC,CAAC;IACJ;;IAEA;IACAA,SAAS,CAACE,EAAE,CAAC,iBAAiB,EAAGS,OAAO,IAAK;MAC3CR,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEO,OAAO,CAAC;MAChD/C,WAAW,CAACgD,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAED,OAAO,CAAC,CAAC;IACzC,CAAC,CAAC;;IAEF;IACAX,SAAS,CAACE,EAAE,CAAC,aAAa,EAAGW,IAAI,IAAK;MACpCV,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAES,IAAI,CAAC;MACpCzC,cAAc,CAACwC,IAAI,IAAI;QACrB,IAAI,CAACA,IAAI,CAACE,IAAI,CAACtD,IAAI,IAAIA,IAAI,CAACuD,MAAM,KAAKF,IAAI,CAACE,MAAM,CAAC,EAAE;UACnD,OAAO,CAAC,GAAGH,IAAI,EAAEC,IAAI,CAAC;QACxB;QACA,OAAOD,IAAI;MACb,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFZ,SAAS,CAACE,EAAE,CAAC,kBAAkB,EAAGW,IAAI,IAAK;MACzCV,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAES,IAAI,CAAC;MAC5CzC,cAAc,CAACwC,IAAI,IAAIA,IAAI,CAACI,MAAM,CAACxD,IAAI,IAAIA,IAAI,CAACuD,MAAM,KAAKF,IAAI,CAACE,MAAM,CAAC,CAAC;IAC1E,CAAC,CAAC;IAEF,OAAO,MAAM;MACXZ,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;MAC/CJ,SAAS,CAACiB,UAAU,CAAC,CAAC;IACxB,CAAC;EACH,CAAC,EAAE,CAAC1D,KAAK,CAAC8C,EAAE,CAAC,CAAC;EAEd,MAAMK,aAAa,GAAIzC,MAAM,IAAK;IAChCkC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAE7C,KAAK,CAAC8C,EAAE,CAAC;IAC/CpC,MAAM,CAACiD,IAAI,CAAC,YAAY,EAAE3D,KAAK,CAAC8C,EAAE,CAAC;EACrC,CAAC;EAEDzD,SAAS,CAAC,MAAM;IACduE,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACxD,QAAQ,EAAEQ,WAAW,CAAC,CAAC;EAE3B,MAAMqC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACFL,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAE7C,KAAK,CAAC8C,EAAE,CAAC;MACvD,MAAMe,QAAQ,GAAG,MAAMrE,KAAK,CAACsE,GAAG,CAAC,4CAA4C9D,KAAK,CAAC8C,EAAE,EAAE,CAAC;MACxFF,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEgB,QAAQ,CAACP,IAAI,CAAC;;MAEjD;MACA,MAAMS,iBAAiB,GAAGF,QAAQ,CAACP,IAAI,CAACU,GAAG,CAACZ,OAAO,IAAI;QACrD,IAAI;UACF,OAAO;YACL,GAAGA,OAAO;YACVa,SAAS,EAAEb,OAAO,CAACa,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACf,OAAO,CAACa,SAAS,CAAC,GAAG;UACjE,CAAC;QACH,CAAC,CAAC,OAAOlB,KAAK,EAAE;UACdH,OAAO,CAACG,KAAK,CAAC,yCAAyC,EAAEK,OAAO,CAACN,EAAE,EAAEC,KAAK,CAAC;UAC3E,OAAO;YACL,GAAGK,OAAO;YACVa,SAAS,EAAE;UACb,CAAC;QACH;MACF,CAAC,CAAC;MAEF5D,WAAW,CAAC0D,iBAAiB,CAAC;IAChC,CAAC,CAAC,OAAOhB,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD,CAAC,SAAS;MACRtC,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMmD,cAAc,GAAGA,CAAA,KAAM;IAAA,IAAAQ,qBAAA;IAC3B,CAAAA,qBAAA,GAAA5B,cAAc,CAAC6B,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC;EAED,MAAMC,gBAAgB,GAAIC,CAAC,IAAK;IAC9B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B,IAAIF,IAAI,EAAE;MACRvD,eAAe,CAACuD,IAAI,CAAC;MACrB;MACA,MAAMG,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,MAAM,GAAIN,CAAC,IAAK;QACrBpD,cAAc,CAACoD,CAAC,CAACE,MAAM,CAACK,MAAM,CAAC;QAC/BzD,gBAAgB,CAAC,IAAI,CAAC;MACxB,CAAC;MACDsD,MAAM,CAACI,aAAa,CAACP,IAAI,CAAC;IAC5B;IACA;IACAD,CAAC,CAACE,MAAM,CAACO,KAAK,GAAG,EAAE;EACrB,CAAC;EAED,MAAMC,aAAa,GAAGA,CAACC,KAAK,EAAE1D,IAAI,EAAE2D,QAAQ,KAAK;IAC/C,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/C,MAAMC,GAAG,GAAGH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;IAEnC,MAAMC,MAAM,GAAGP,KAAK,CAACQ,YAAY,GAAGR,KAAK,CAACvD,KAAK;IAC/C,MAAMgE,MAAM,GAAGT,KAAK,CAACU,aAAa,GAAGV,KAAK,CAACtD,MAAM;IACjD,MAAMiE,UAAU,GAAGC,MAAM,CAACC,gBAAgB;IAE1CX,MAAM,CAACzD,KAAK,GAAGH,IAAI,CAACG,KAAK,GAAGkE,UAAU,GAAGJ,MAAM;IAC/CL,MAAM,CAACxD,MAAM,GAAGJ,IAAI,CAACI,MAAM,GAAGiE,UAAU,GAAGF,MAAM;IAEjDJ,GAAG,CAACS,YAAY,CAACH,UAAU,EAAE,CAAC,EAAE,CAAC,EAAEA,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC;IACpDN,GAAG,CAACU,qBAAqB,GAAG,MAAM;IAElCV,GAAG,CAACW,SAAS,CACXhB,KAAK,EACL1D,IAAI,CAAC2E,CAAC,GAAGV,MAAM,EACfjE,IAAI,CAAC4E,CAAC,GAAGT,MAAM,EACfnE,IAAI,CAACG,KAAK,GAAG8D,MAAM,EACnBjE,IAAI,CAACI,MAAM,GAAG+D,MAAM,EACpB,CAAC,EACD,CAAC,EACDnE,IAAI,CAACG,KAAK,GAAG8D,MAAM,EACnBjE,IAAI,CAACI,MAAM,GAAG+D,MAChB,CAAC;IAED,OAAO,IAAIU,OAAO,CAAEC,OAAO,IAAK;MAC9BlB,MAAM,CAACmB,MAAM,CACVC,IAAI,IAAK;QACR,IAAI,CAACA,IAAI,EAAE;UACT9D,OAAO,CAACG,KAAK,CAAC,iBAAiB,CAAC;UAChC;QACF;QACA2D,IAAI,CAACC,IAAI,GAAGtB,QAAQ;QACpBmB,OAAO,CAACE,IAAI,CAAC;MACf,CAAC,EACDxF,YAAY,CAAC0F,IAAI,EACjB,CACF,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI5E,QAAQ,IAAIF,aAAa,IAAIb,YAAY,IAAIA,YAAY,CAAC0F,IAAI,CAACE,UAAU,CAAC,QAAQ,CAAC,EAAE;MACvF,IAAI;QACF,MAAMC,gBAAgB,GAAG,MAAM5B,aAAa,CAC1ClD,QAAQ,EACRF,aAAa,EACbb,YAAY,CAACyF,IACf,CAAC;QACD,MAAMK,WAAW,GAAG,IAAIC,IAAI,CAAC,CAACF,gBAAgB,CAAC,EAAE7F,YAAY,CAACyF,IAAI,EAAE;UAAEC,IAAI,EAAE1F,YAAY,CAAC0F;QAAK,CAAC,CAAC;QAChGzF,eAAe,CAAC6F,WAAW,CAAC;;QAE5B;QACA,MAAMnC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;QAC/BD,MAAM,CAACE,MAAM,GAAIN,CAAC,IAAK;UACrBpD,cAAc,CAACoD,CAAC,CAACE,MAAM,CAACK,MAAM,CAAC;QACjC,CAAC;QACDH,MAAM,CAACI,aAAa,CAAC+B,WAAW,CAAC;MACnC,CAAC,CAAC,OAAOjE,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF;IACAxB,gBAAgB,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,MAAM2F,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAI,CAAC9F,WAAW,EAAE;IAElB,MAAMkE,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/C,MAAMC,GAAG,GAAGH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;IACnC,MAAMyB,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;IAEvBD,GAAG,CAACpC,MAAM,GAAG,MAAM;MACjBO,MAAM,CAACzD,KAAK,GAAGsF,GAAG,CAACtF,KAAK;MACxByD,MAAM,CAACxD,MAAM,GAAGqF,GAAG,CAACrF,MAAM;;MAE1B;MACA2D,GAAG,CAAChC,MAAM,GAAG,QAAQpB,aAAa,KAAK;MACvCoD,GAAG,CAACW,SAAS,CAACe,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;;MAExB;MACA7B,MAAM,CAACmB,MAAM,CAAEC,IAAI,IAAK;QACtB,MAAMW,WAAW,GAAG,IAAIJ,IAAI,CAAC,CAACP,IAAI,CAAC,EAAE,WAAWxF,YAAY,CAACyF,IAAI,EAAE,EAAE;UAAEC,IAAI,EAAE1F,YAAY,CAAC0F;QAAK,CAAC,CAAC;QACjGzF,eAAe,CAACkG,WAAW,CAAC;QAC5BhG,cAAc,CAACiE,MAAM,CAACgC,SAAS,CAAC,CAAC,CAAC;MACpC,CAAC,EAAEpG,YAAY,CAAC0F,IAAI,CAAC;IACvB,CAAC;IAEDO,GAAG,CAACI,GAAG,GAAGnG,WAAW;EACvB,CAAC;EAED,MAAMoG,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI,CAACtG,YAAY,IAAI,CAACR,MAAM,EAAE;IAE9BO,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,MAAMwG,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEzG,YAAY,CAAC;MAErC0B,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE3B,YAAY,CAACyF,IAAI,CAAC;MAEpD,MAAMiB,cAAc,GAAG,MAAMpI,KAAK,CAACqI,IAAI,CAAC,mCAAmC,EAAEJ,QAAQ,EAAE;QACrFK,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEFlF,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE+E,cAAc,CAACtE,IAAI,CAAC;;MAErD;MACA,IAAI5C,MAAM,IAAIA,MAAM,CAACwC,SAAS,EAAE;QAC9B,MAAM6E,WAAW,GAAG;UAClBC,OAAO,EAAEhI,KAAK,CAAC8C,EAAE;UACjBmF,QAAQ,EAAEhI,IAAI,CAAC6C,EAAE;UACjBoF,UAAU,EAAEjI,IAAI,CAAC0G,IAAI;UACrBvD,OAAO,EAAEjB,WAAW,IAAIjB,YAAY,CAACyF,IAAI;UACzCwB,WAAW,EAAE,MAAM;UACnBzD,IAAI,EAAEkD,cAAc,CAACtE,IAAI,CAACoB;QAC5B,CAAC;QAED9B,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEkF,WAAW,CAAC;QACpDrH,MAAM,CAACiD,IAAI,CAAC,cAAc,EAAEoE,WAAW,CAAC;;QAExC;QACA5G,eAAe,CAAC,IAAI,CAAC;QACrBE,cAAc,CAAC,IAAI,CAAC;QACpBe,cAAc,CAAC,EAAE,CAAC;QAClBX,gBAAgB,CAAC,KAAK,CAAC;MACzB;IAEF,CAAC,CAAC,OAAOsB,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CqF,KAAK,CAAC,0CAA0C,CAAC;IACnD,CAAC,SAAS;MACRnH,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMoH,cAAc,GAAGA,CAAA,KAAM;IAC3BlH,eAAe,CAAC,IAAI,CAAC;IACrBE,cAAc,CAAC,IAAI,CAAC;IACpBe,cAAc,CAAC,EAAE,CAAC;IAClBb,gBAAgB,CAAC,KAAK,CAAC;IACvBE,gBAAgB,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,MAAM6G,WAAW,GAAI7D,CAAC,IAAK;IACzBA,CAAC,CAAC8D,cAAc,CAAC,CAAC;IAClB,IAAI,CAACjI,UAAU,CAACkI,IAAI,CAAC,CAAC,IAAI,CAAC9H,MAAM,EAAE;MACjCkC,OAAO,CAACC,GAAG,CAAC,qDAAqD,CAAC;MAClE;IACF;IAEA,IAAI,CAACnC,MAAM,CAACwC,SAAS,EAAE;MACrBnC,kBAAkB,CAAC,iDAAiD,CAAC;MACrE;IACF;IAEA,MAAMgH,WAAW,GAAG;MAClBC,OAAO,EAAEhI,KAAK,CAAC8C,EAAE;MACjBmF,QAAQ,EAAEhI,IAAI,CAAC6C,EAAE;MACjBoF,UAAU,EAAEjI,IAAI,CAAC0G,IAAI;MACrBvD,OAAO,EAAE9C,UAAU,CAACkI,IAAI,CAAC,CAAC;MAC1BL,WAAW,EAAE;IACf,CAAC;IAEDvF,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEkF,WAAW,CAAC;IAC/CrH,MAAM,CAACiD,IAAI,CAAC,cAAc,EAAEoE,WAAW,CAAC;IACxCxH,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC;EAED,MAAMkI,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI/H,MAAM,IAAIA,MAAM,CAACwC,SAAS,EAAE;MAC9BxC,MAAM,CAACiD,IAAI,CAAC,QAAQ,EAAE;QACpBqE,OAAO,EAAEhI,KAAK,CAAC8C,EAAE;QACjBU,MAAM,EAAEvD,IAAI,CAAC6C,EAAE;QACf4F,QAAQ,EAAEzI,IAAI,CAAC0G;MACjB,CAAC,CAAC;;MAEF;MACAgC,UAAU,CAAC,MAAM;QACf,IAAIjI,MAAM,IAAIA,MAAM,CAACwC,SAAS,EAAE;UAC9BxC,MAAM,CAACiD,IAAI,CAAC,aAAa,EAAE;YACzBqE,OAAO,EAAEhI,KAAK,CAAC8C,EAAE;YACjBU,MAAM,EAAEvD,IAAI,CAAC6C;UACf,CAAC,CAAC;QACJ;MACF,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC;EAED,MAAM8F,UAAU,GAAIC,SAAS,IAAK;IAChC,OAAO,IAAIC,IAAI,CAACD,SAAS,CAAC,CAACE,kBAAkB,CAAC,EAAE,EAAE;MAChDC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,WAAW,GAAI9F,OAAO,IAAK;IAC/B,OAAOA,OAAO,CAAC+F,SAAS,KAAKlJ,IAAI,CAAC6C,EAAE;EACtC,CAAC;EAED,MAAMsG,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAInJ,IAAI,CAAC6C,EAAE,KAAK9C,KAAK,CAACqJ,QAAQ,EAAE;MAC9B,OAAOrJ,KAAK,CAACsJ,WAAW;IAC1B,CAAC,MAAM;MACL,OAAOtJ,KAAK,CAACuJ,UAAU;IACzB;EACF,CAAC;EAED,MAAMC,WAAW,GAAIC,QAAQ,IAAK;IAChC,IAAI,CAACA,QAAQ,EAAE,OAAO,IAAI;IAC1B,IAAIA,QAAQ,CAAC3C,UAAU,CAAC,QAAQ,CAAC,EAAE,OAAO,KAAK;IAC/C,IAAI2C,QAAQ,KAAK,iBAAiB,EAAE,OAAO,IAAI;IAC/C,IAAIA,QAAQ,CAACC,QAAQ,CAAC,MAAM,CAAC,IAAID,QAAQ,CAACC,QAAQ,CAAC,UAAU,CAAC,EAAE,OAAO,IAAI;IAC3E,IAAID,QAAQ,KAAK,YAAY,EAAE,OAAO,IAAI;IAC1C,OAAO,IAAI;EACb,CAAC;EAED,MAAME,cAAc,GAAIC,KAAK,IAAK;IAChC,IAAI,CAACA,KAAK,EAAE,OAAO,SAAS;IAC5B,MAAMC,CAAC,GAAG,IAAI;IACd,MAAMC,KAAK,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IACzC,MAAMC,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACnH,GAAG,CAAC+G,KAAK,CAAC,GAAGI,IAAI,CAACnH,GAAG,CAACgH,CAAC,CAAC,CAAC;IACnD,OAAOK,UAAU,CAAC,CAACN,KAAK,GAAGI,IAAI,CAACG,GAAG,CAACN,CAAC,EAAEE,CAAC,CAAC,EAAEK,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGN,KAAK,CAACC,CAAC,CAAC;EACzE,CAAC;;EAED;EACA,MAAMM,WAAW,GAAIjH,OAAO,IAAK;IAC/B,OAAOA,OAAO,IAAIA,OAAO,CAACkH,YAAY,KAAK,MAAM,IAAIlH,OAAO,CAACa,SAAS;EACxE,CAAC;;EAED;EACA,MAAMsG,eAAe,GAAInH,OAAO,IAAK;IACnC,OAAOiH,WAAW,CAACjH,OAAO,CAAC,GAAGA,OAAO,CAACa,SAAS,CAACwF,QAAQ,GAAG,IAAI;EACjE,CAAC;;EAED;EACA,MAAMe,WAAW,GAAIpH,OAAO,IAAK;IAC/B,OAAOiH,WAAW,CAACjH,OAAO,CAAC,GAAGA,OAAO,CAACa,SAAS,CAACwG,YAAY,GAAG,EAAE;EACnE,CAAC;;EAED;EACA,MAAMC,WAAW,GAAItH,OAAO,IAAK;IAC/B,OAAOiH,WAAW,CAACjH,OAAO,CAAC,GAAGA,OAAO,CAACa,SAAS,CAAC0G,IAAI,GAAG,CAAC;EAC1D,CAAC;;EAED;EACA,MAAMC,WAAW,GAAIxH,OAAO,IAAK;IAC/B,OAAOiH,WAAW,CAACjH,OAAO,CAAC,GAAGA,OAAO,CAACa,SAAS,CAAC4G,IAAI,GAAG,EAAE;EAC3D,CAAC;EAED,IAAIrK,OAAO,EAAE;IACX,oBACEX,OAAA;MAAKiL,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5BlL,OAAA;QAAKiL,SAAS,EAAC,eAAe;QAAAC,QAAA,eAC5BlL,OAAA;UAAKiL,SAAS,EAAC,SAAS;UAAAC,QAAA,EAAC;QAAe;UAAA1F,QAAA,EAAA2F,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAA7F,QAAA,EAAA2F,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C;IAAC;MAAA7F,QAAA,EAAA2F,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,oBACErL,OAAA;IAAKiL,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC5BlL,OAAA;MAAKiL,SAAS,EAAC,0BAA0B;MAAAC,QAAA,gBACvClL,OAAA;QAAKiL,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1BlL,OAAA;UAAKiL,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBlL,OAAA;YAAAkL,QAAA,GAAI,mCAAuB,EAAC/K,KAAK,CAAC8C,EAAE;UAAA;YAAAuC,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC1CrL,OAAA;YAAKiL,SAAS,EAAC,YAAY;YAAAC,QAAA,GAAC,iBACX,EAAC3B,iBAAiB,CAAC,CAAC;UAAA;YAAA/D,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC,eACNrL,OAAA;YAAKiL,SAAS,EAAC,YAAY;YAAAC,QAAA,eACzBlL,OAAA;cAAAkL,QAAA,GAAO,WAAS,EAAC9K,IAAI,CAAC6C,EAAE,EAAC,eAAa,EAAC9C,KAAK,CAAC8C,EAAE,EAAC,aAAW,EAACpC,MAAM,aAANA,MAAM,eAANA,MAAM,CAAEwC,SAAS,GAAG,cAAc,GAAG,iBAAiB;YAAA;cAAAmC,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAA7F,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxH,CAAC;QAAA;UAAA7F,QAAA,EAAA2F,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACNrL,OAAA;UAAQiL,SAAS,EAAC,WAAW;UAACK,OAAO,EAAEjL,OAAQ;UAAA6K,QAAA,EAAC;QAAC;UAAA1F,QAAA,EAAA2F,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAA7F,QAAA,EAAA2F,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD,CAAC,EAELpK,eAAe,iBACdjB,OAAA;QAAKiL,SAAS,EAAC,eAAe;QAAAC,QAAA,EAC3BjK;MAAe;QAAAuE,QAAA,EAAA2F,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CACN,eAEDrL,OAAA;QAAKiL,SAAS,EAAC,oBAAoB;QAAAC,QAAA,gBACjClL,OAAA;UAAKiL,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5BlL,OAAA;YAAAkL,QAAA,GAAO/K,KAAK,CAACoL,MAAM,EAAC,GAAC,EAACpL,KAAK,CAACqL,aAAa;UAAA;YAAAhG,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACjDrL,OAAA;YAAMiL,SAAS,EAAC,OAAO;YAAAC,QAAA,EAAC;UAAC;YAAA1F,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAChCrL,OAAA;YAAAkL,QAAA,GAAO/K,KAAK,CAACsL,WAAW,EAAC,GAAC,EAACtL,KAAK,CAACuL,WAAW;UAAA;YAAAlG,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAA7F,QAAA,EAAA2F,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CAAC,eACNrL,OAAA;UAAKiL,SAAS,EAAC,cAAc;UAAAC,QAAA,GAAC,UACpB,eAAAlL,OAAA;YAAMiL,SAAS,EAAE,UAAU9K,KAAK,CAACwL,MAAM,EAAG;YAAAT,QAAA,EAAE/K,KAAK,CAACwL;UAAM;YAAAnG,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAA7F,QAAA,EAAA2F,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrE,CAAC;MAAA;QAAA7F,QAAA,EAAA2F,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENrL,OAAA;QAAKiL,SAAS,EAAC,eAAe;QAAAC,QAAA,GAC3B3K,QAAQ,CAACqL,MAAM,KAAK,CAAC,gBACpB5L,OAAA;UAAKiL,SAAS,EAAC,aAAa;UAAAC,QAAA,eAC1BlL,OAAA;YAAAkL,QAAA,EAAG;UAAwC;YAAA1F,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAA7F,QAAA,EAAA2F,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC,GAEN9K,QAAQ,CAAC4D,GAAG,CAAEZ,OAAO,iBACnBvD,OAAA;UAEEiL,SAAS,EAAE,WAAW5B,WAAW,CAAC9F,OAAO,CAAC,GAAG,YAAY,GAAG,eAAe,EAAG;UAAA2H,QAAA,eAE9ElL,OAAA;YAAKiL,SAAS,EAAC,iBAAiB;YAAAC,QAAA,GAC7BV,WAAW,CAACjH,OAAO,CAAC,gBACnBvD,OAAA;cAAKiL,SAAS,EAAC,cAAc;cAAAC,QAAA,gBAC3BlL,OAAA;gBAAKiL,SAAS,EAAC,WAAW;gBAAAC,QAAA,gBACxBlL,OAAA;kBAAMiL,SAAS,EAAC,WAAW;kBAAAC,QAAA,EACxBvB,WAAW,CAACe,eAAe,CAACnH,OAAO,CAAC;gBAAC;kBAAAiC,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAClC,CAAC,eACPrL,OAAA;kBAAKiL,SAAS,EAAC,cAAc;kBAAAC,QAAA,gBAC3BlL,OAAA;oBAAKiL,SAAS,EAAC,WAAW;oBAAAC,QAAA,EAAEP,WAAW,CAACpH,OAAO;kBAAC;oBAAAiC,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eACvDrL,OAAA;oBAAKiL,SAAS,EAAC,WAAW;oBAAAC,QAAA,EAAEpB,cAAc,CAACe,WAAW,CAACtH,OAAO,CAAC;kBAAC;oBAAAiC,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,EACtE9H,OAAO,CAACA,OAAO,IAAIA,OAAO,CAACA,OAAO,KAAKoH,WAAW,CAACpH,OAAO,CAAC,iBAC1DvD,OAAA;oBAAKiL,SAAS,EAAC,cAAc;oBAAAC,QAAA,EAAE3H,OAAO,CAACA;kBAAO;oBAAAiC,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CACrD;gBAAA;kBAAA7F,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACE,CAAC;cAAA;gBAAA7F,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,EACLX,eAAe,CAACnH,OAAO,CAAC,IAAImH,eAAe,CAACnH,OAAO,CAAC,CAAC0D,UAAU,CAAC,QAAQ,CAAC,gBACxEjH,OAAA;gBAAKiL,SAAS,EAAC,yBAAyB;gBAAAC,QAAA,gBACtClL,OAAA;kBACE0H,GAAG,EAAE,yBAAyBqD,WAAW,CAACxH,OAAO,CAAC,EAAG;kBACrDsI,GAAG,EAAElB,WAAW,CAACpH,OAAO,CAAE;kBAC1B0H,SAAS,EAAC,uBAAuB;kBACjCa,MAAM,EAAGlH,CAAC,IAAK;oBACb;oBACAkE,UAAU,CAAC,MAAM;sBACflE,CAAC,CAACE,MAAM,CAACiH,SAAS,CAACC,MAAM,CAAC,SAAS,CAAC;oBACtC,CAAC,EAAE,IAAI,CAAC;kBACV,CAAE;kBACFC,OAAO,EAAGrH,CAAC,IAAK;oBACd7B,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAE6H,WAAW,CAACxH,OAAO,CAAC,CAAC;oBAC9DqB,CAAC,CAACE,MAAM,CAACoH,KAAK,CAACC,OAAO,GAAG,MAAM;kBACjC;gBAAE;kBAAA3G,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH,CAAC,eACFrL,OAAA;kBACEoM,IAAI,EAAE,yBAAyBrB,WAAW,CAACxH,OAAO,CAAC,EAAG;kBACtDuB,MAAM,EAAC,QAAQ;kBACfuH,GAAG,EAAC,qBAAqB;kBACzBpB,SAAS,EAAC,cAAc;kBAAAC,QAAA,EACzB;gBAED;kBAAA1F,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CAAC;cAAA;gBAAA7F,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD,CAAC,gBAENrL,OAAA;gBACEoM,IAAI,EAAE,yBAAyBrB,WAAW,CAACxH,OAAO,CAAC,EAAG;gBACtDuB,MAAM,EAAC,QAAQ;gBACfuH,GAAG,EAAC,qBAAqB;gBACzBpB,SAAS,EAAC,cAAc;gBAAAC,QAAA,EACzB;cAED;gBAAA1F,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CACJ;YAAA;cAAA7F,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,gBAENrL,OAAA;cAAKiL,SAAS,EAAC,cAAc;cAAAC,QAAA,EAAE3H,OAAO,CAACA;YAAO;cAAAiC,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CACrD,eACDrL,OAAA;cAAKiL,SAAS,EAAC,cAAc;cAAAC,QAAA,GAC1BnC,UAAU,CAACxF,OAAO,CAAC+I,UAAU,CAAC,EAC9B,CAACjD,WAAW,CAAC9F,OAAO,CAAC,iBACpBvD,OAAA;gBAAMiL,SAAS,EAAC,aAAa;gBAAAC,QAAA,GAAC,UAAG,EAAC3H,OAAO,CAACgJ,WAAW;cAAA;gBAAA/G,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAC7D;YAAA;cAAA7F,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAA7F,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC,GAhED9H,OAAO,CAACN,EAAE;UAAAuC,QAAA,EAAA2F,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAiEZ,CACN,CACF,EAEAtK,WAAW,CAAC6K,MAAM,GAAG,CAAC,iBACrB5L,OAAA;UAAKiL,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAC9BnK,WAAW,CAACoD,GAAG,CAAC/D,IAAI,iBACnBJ,OAAA;YAAuBiL,SAAS,EAAC,aAAa;YAAAC,QAAA,GAC3C9K,IAAI,CAACyI,QAAQ,EAAC,eACjB;UAAA,GAFUzI,IAAI,CAACuD,MAAM;YAAA6B,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEhB,CACN;QAAC;UAAA7F,QAAA,EAAA2F,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CACN,eAEDrL,OAAA;UAAKwM,GAAG,EAAE7J;QAAe;UAAA6C,QAAA,EAAA2F,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAA7F,QAAA,EAAA2F,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,EAGLhK,YAAY,IAAI,CAACI,aAAa,IAAI,CAACE,aAAa,iBAC/C3B,OAAA;QAAKiL,SAAS,EAAC,sBAAsB;QAAAC,QAAA,gBACnClL,OAAA;UAAKiL,SAAS,EAAC,qBAAqB;UAAAC,QAAA,gBAClClL,OAAA;YAAAkL,QAAA,EAAI;UAAe;YAAA1F,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxBrL,OAAA;YAAQiL,SAAS,EAAC,iBAAiB;YAACK,OAAO,EAAE9C,cAAe;YAAA0C,QAAA,EAAC;UAAC;YAAA1F,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAA7F,QAAA,EAAA2F,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpE,CAAC,eACNrL,OAAA;UAAKiL,SAAS,EAAC,sBAAsB;UAAAC,QAAA,GAClC7J,YAAY,CAAC0F,IAAI,CAACE,UAAU,CAAC,QAAQ,CAAC,gBACrCjH,OAAA;YAAK0H,GAAG,EAAEnG,WAAY;YAACsK,GAAG,EAAC,SAAS;YAACZ,SAAS,EAAC;UAAoB;YAAAzF,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAEtErL,OAAA;YAAKiL,SAAS,EAAC,sBAAsB;YAAAC,QAAA,gBACnClL,OAAA;cAAMiL,SAAS,EAAC,iBAAiB;cAAAC,QAAA,EAAEvB,WAAW,CAACtI,YAAY,CAAC0F,IAAI;YAAC;cAAAvB,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACzErL,OAAA;cAAKiL,SAAS,EAAC,cAAc;cAAAC,QAAA,gBAC3BlL,OAAA;gBAAKiL,SAAS,EAAC,WAAW;gBAAAC,QAAA,EAAE7J,YAAY,CAACyF;cAAI;gBAAAtB,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACpDrL,OAAA;gBAAKiL,SAAS,EAAC,WAAW;gBAAAC,QAAA,EAAEpB,cAAc,CAACzI,YAAY,CAACyJ,IAAI;cAAC;gBAAAtF,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAA7F,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjE,CAAC;UAAA;YAAA7F,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CACN,eACDrL,OAAA;YAAKiL,SAAS,EAAC,oBAAoB;YAAAC,QAAA,eACjClL,OAAA;cACE+G,IAAI,EAAC,MAAM;cACX1B,KAAK,EAAE/C,WAAY;cACnBmK,QAAQ,EAAG7H,CAAC,IAAKrC,cAAc,CAACqC,CAAC,CAACE,MAAM,CAACO,KAAK,CAAE;cAChDqH,WAAW,EAAC,0BAA0B;cACtCC,SAAS,EAAC;YAAK;cAAAnH,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChB;UAAC;YAAA7F,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACNrL,OAAA;YAAKiL,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3BlL,OAAA;cACEiL,SAAS,EAAC,UAAU;cACpBK,OAAO,EAAEA,CAAA,KAAM1J,gBAAgB,CAAC,IAAI,CAAE;cACtCgL,QAAQ,EAAE,CAACvL,YAAY,CAAC0F,IAAI,CAACE,UAAU,CAAC,QAAQ,CAAE;cAAAiE,QAAA,EACnD;YAED;cAAA1F,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTrL,OAAA;cACEiL,SAAS,EAAC,YAAY;cACtBK,OAAO,EAAE9C,cAAe;cACxBoE,QAAQ,EAAEzL,SAAU;cAAA+J,QAAA,EACrB;YAED;cAAA1F,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTrL,OAAA;cACEiL,SAAS,EAAC,eAAe;cACzBK,OAAO,EAAE3D,cAAe;cACxBiF,QAAQ,EAAEzL,SAAU;cAAA+J,QAAA,EAEnB/J,SAAS,GAAG,eAAe,GAAG;YAAc;cAAAqE,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvC,CAAC;UAAA;YAAA7F,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAA7F,QAAA,EAAA2F,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAA7F,QAAA,EAAA2F,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,eAEDrL,OAAA;QAAM6M,QAAQ,EAAEpE,WAAY;QAACwC,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBACtDlL,OAAA;UAAKiL,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1BlL,OAAA;YACE+G,IAAI,EAAC,MAAM;YACXyF,GAAG,EAAE9J,YAAa;YAClB+J,QAAQ,EAAE9H,gBAAiB;YAC3BmI,MAAM,EAAC,2CAA2C;YAClDZ,KAAK,EAAE;cAAEC,OAAO,EAAE;YAAO;UAAE;YAAA3G,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC,eAEFrL,OAAA;YAAKiL,SAAS,EAAC,cAAc;YAAAC,QAAA,eAC3BlL,OAAA;cACE+G,IAAI,EAAC,QAAQ;cACbkE,SAAS,EAAC,UAAU;cACpBK,OAAO,EAAEA,CAAA;gBAAA,IAAAyB,qBAAA;gBAAA,QAAAA,qBAAA,GAAMrK,YAAY,CAAC8B,OAAO,cAAAuI,qBAAA,uBAApBA,qBAAA,CAAsBC,KAAK,CAAC,CAAC;cAAA,CAAC;cAC7CJ,QAAQ,EAAEzL,SAAS,IAAI,EAACN,MAAM,aAANA,MAAM,eAANA,MAAM,CAAEwC,SAAS,KAAIhC,YAAa;cAC1D4L,KAAK,EAAC,aAAa;cAAA/B,QAAA,EACpB;YAED;cAAA1F,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAA7F,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eAENrL,OAAA;YACE+G,IAAI,EAAC,MAAM;YACX1B,KAAK,EAAE5E,UAAW;YAClBgM,QAAQ,EAAG7H,CAAC,IAAK;cACflE,aAAa,CAACkE,CAAC,CAACE,MAAM,CAACO,KAAK,CAAC;cAC7BuD,YAAY,CAAC,CAAC;YAChB,CAAE;YACF8D,WAAW,EAAC,sBAAsB;YAClCC,SAAS,EAAC,KAAK;YACfC,QAAQ,EAAE,EAAC/L,MAAM,aAANA,MAAM,eAANA,MAAM,CAAEwC,SAAS,KAAIhC;UAAa;YAAAmE,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9C,CAAC,eAEFrL,OAAA;YACE+G,IAAI,EAAC,QAAQ;YACb6F,QAAQ,EAAE,CAACnM,UAAU,CAACkI,IAAI,CAAC,CAAC,IAAI,EAAC9H,MAAM,aAANA,MAAM,eAANA,MAAM,CAAEwC,SAAS,KAAIhC,YAAa;YAAA6J,QAAA,EAElErK,MAAM,aAANA,MAAM,eAANA,MAAM,CAAEwC,SAAS,GAAG,MAAM,GAAG;UAAe;YAAAmC,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvC,CAAC;QAAA;UAAA7F,QAAA,EAAA2F,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAENrL,OAAA;UAAKiL,SAAS,EAAC,iBAAiB;UAAAC,QAAA,eAC9BlL,OAAA;YAAAkL,QAAA,EAAO;UAAiE;YAAA1F,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QAAC;UAAA7F,QAAA,EAAA2F,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7E,CAAC;MAAA;QAAA7F,QAAA,EAAA2F,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eAGPrL,OAAA,CAACF,KAAK;QACJoN,MAAM,EAAEzL,aAAc;QACtB0L,cAAc,EAAE3E,cAAe;QAC/ByC,SAAS,EAAC,YAAY;QACtBmC,gBAAgB,EAAC,oBAAoB;QAAAlC,QAAA,eAErClL,OAAA;UAAKiL,SAAS,EAAC,oBAAoB;UAAAC,QAAA,gBACjClL,OAAA;YAAKiL,SAAS,EAAC,mBAAmB;YAAAC,QAAA,gBAChClL,OAAA;cAAAkL,QAAA,EAAI;YAAa;cAAA1F,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACtBrL,OAAA;cAAQiL,SAAS,EAAC,WAAW;cAACK,OAAO,EAAE9C,cAAe;cAAA0C,QAAA,EAAC;YAAC;cAAA1F,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAA7F,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9D,CAAC,eACNrL,OAAA;YAAKiL,SAAS,EAAC,WAAW;YAAAC,QAAA,EACvB7J,YAAY,aAAZA,YAAY,eAAZA,YAAY,CAAE0F,IAAI,CAACE,UAAU,CAAC,QAAQ,CAAC,gBACtCjH,OAAA,CAACH,SAAS;cACRgC,IAAI,EAAEA,IAAK;cACX4K,QAAQ,EAAGY,OAAO,IAAKvL,OAAO,CAACuL,OAAO,CAAE;cACxCC,UAAU,EAAGC,CAAC,IAAKpL,gBAAgB,CAACoL,CAAC,CAAE;cACvCC,MAAM,EAAE,CAAE;cAAAtC,QAAA,eAEVlL,OAAA;gBACEwM,GAAG,EAAEnK,WAAY;gBACjBqF,GAAG,EAAEnG,WAAY;gBACjBsK,GAAG,EAAC,cAAc;gBAClBC,MAAM,EAAGlH,CAAC,IAAK;kBACb,MAAM;oBAAE5C,KAAK;oBAAEC;kBAAO,CAAC,GAAG2C,CAAC,CAAC6I,aAAa;kBACzC3L,OAAO,CAAC;oBACNC,IAAI,EAAE,GAAG;oBACTC,KAAK,EAAE,EAAE;oBACTC,MAAM,EAAG,EAAE,GAAGA,MAAM,GAAID;kBAC1B,CAAC,CAAC;gBACJ;cAAE;gBAAAwD,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC;cAAA7F,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACO,CAAC,gBAEZrL,OAAA;cAAKiL,SAAS,EAAC,sBAAsB;cAAAC,QAAA,gBACnClL,OAAA;gBAAMiL,SAAS,EAAC,iBAAiB;gBAAAC,QAAA,EAAEvB,WAAW,CAACtI,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAE0F,IAAI;cAAC;gBAAAvB,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC1ErL,OAAA;gBAAKiL,SAAS,EAAC,cAAc;gBAAAC,QAAA,gBAC3BlL,OAAA;kBAAKiL,SAAS,EAAC,WAAW;kBAAAC,QAAA,EAAE7J,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEyF;gBAAI;kBAAAtB,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eACrDrL,OAAA;kBAAKiL,SAAS,EAAC,WAAW;kBAAAC,QAAA,EAAEpB,cAAc,CAACzI,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEyJ,IAAI;gBAAC;kBAAAtF,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAA7F,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClE,CAAC;YAAA;cAAA7F,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UACN;YAAA7F,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eACNrL,OAAA;YAAKiL,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3BlL,OAAA;cAAQiL,SAAS,EAAC,YAAY;cAACK,OAAO,EAAE9C,cAAe;cAAA0C,QAAA,EAAC;YAExD;cAAA1F,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTrL,OAAA;cAAQiL,SAAS,EAAC,aAAa;cAACK,OAAO,EAAEtE,kBAAmB;cAAAkE,QAAA,EACzD7J,YAAY,aAAZA,YAAY,eAAZA,YAAY,CAAE0F,IAAI,CAACE,UAAU,CAAC,QAAQ,CAAC,GAAG,YAAY,GAAG;YAAU;cAAAzB,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9D,CAAC;UAAA;YAAA7F,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAA7F,QAAA,EAAA2F,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAA7F,QAAA,EAAA2F,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAGRrL,OAAA,CAACF,KAAK;QACJoN,MAAM,EAAEvL,aAAc;QACtBwL,cAAc,EAAE3E,cAAe;QAC/ByC,SAAS,EAAC,YAAY;QACtBmC,gBAAgB,EAAC,oBAAoB;QAAAlC,QAAA,eAErClL,OAAA;UAAKiL,SAAS,EAAC,oBAAoB;UAAAC,QAAA,gBACjClL,OAAA;YAAKiL,SAAS,EAAC,mBAAmB;YAAAC,QAAA,gBAChClL,OAAA;cAAAkL,QAAA,EAAI;YAAa;cAAA1F,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACtBrL,OAAA;cAAQiL,SAAS,EAAC,WAAW;cAACK,OAAO,EAAE9C,cAAe;cAAA0C,QAAA,EAAC;YAAC;cAAA1F,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAA7F,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9D,CAAC,eAENrL,OAAA;YAAKiL,SAAS,EAAC,YAAY;YAAAC,QAAA,eACzBlL,OAAA;cAAKiL,SAAS,EAAC,cAAc;cAAAC,QAAA,gBAC3BlL,OAAA;gBAAAkL,QAAA,EAAI;cAAO;gBAAA1F,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAChBrL,OAAA;gBAAKiL,SAAS,EAAC,gBAAgB;gBAAAC,QAAA,gBAC7BlL,OAAA;kBAAQiL,SAAS,EAAC,YAAY;kBAACK,OAAO,EAAEjE,eAAgB;kBAAA6D,QAAA,EAAC;gBAEzD;kBAAA1F,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACTrL,OAAA;kBAAAkL,QAAA,GAAO,iBAEL,eAAAlL,OAAA;oBACE+G,IAAI,EAAC,OAAO;oBACZ2G,GAAG,EAAC,GAAG;oBACPC,GAAG,EAAC,IAAI;oBACRtI,KAAK,EAAE7C,aAAc;oBACrBiK,QAAQ,EAAG7H,CAAC,IAAKnC,gBAAgB,CAACmL,QAAQ,CAAChJ,CAAC,CAACE,MAAM,CAACO,KAAK,CAAC;kBAAE;oBAAAG,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC7D,CAAC,eACFrL,OAAA;oBAAAkL,QAAA,GAAO1I,aAAa,EAAC,IAAE;kBAAA;oBAAAgD,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC;gBAAA;kBAAA7F,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACzB,CAAC;cAAA;gBAAA7F,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC;YAAA;cAAA7F,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC;YAAA7F,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAENrL,OAAA;YAAKiL,SAAS,EAAC,wBAAwB;YAAAC,QAAA,eACrClL,OAAA;cAAK0H,GAAG,EAAEnG,WAAY;cAACsK,GAAG,EAAC,cAAc;cAACZ,SAAS,EAAC;YAAoB;cAAAzF,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAA7F,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxE,CAAC,eAENrL,OAAA;YAAKiL,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3BlL,OAAA;cAAQiL,SAAS,EAAC,YAAY;cAACK,OAAO,EAAE9C,cAAe;cAAA0C,QAAA,EAAC;YAExD;cAAA1F,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTrL,OAAA;cAAQiL,SAAS,EAAC,UAAU;cAACK,OAAO,EAAEA,CAAA,KAAM1J,gBAAgB,CAAC,KAAK,CAAE;cAAAsJ,QAAA,EAAC;YAErE;cAAA1F,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAA7F,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAA7F,QAAA,EAAA2F,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAA7F,QAAA,EAAA2F,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAA7F,QAAA,EAAA2F,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAA7F,QAAA,EAAA2F,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC/K,EAAA,CAjuBIJ,SAAS;AAAA2N,EAAA,GAAT3N,SAAS;AAmuBf,eAAeA,SAAS;AAAC,IAAA2N,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}