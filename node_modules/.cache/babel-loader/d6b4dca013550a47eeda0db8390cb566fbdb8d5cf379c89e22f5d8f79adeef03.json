{"ast":null,"code":"var _jsxFileName = \"/Users/mdkhalidhossain/CST/p2p-exchange/client/src/components/ChatModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatModal = ({\n  order,\n  user,\n  onClose\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [socket, setSocket] = useState(null);\n  const [typingUsers, setTypingUsers] = useState([]);\n  const [connectionError, setConnectionError] = useState('');\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    // Initialize socket connection\n    const newSocket = io('http://localhost:50000', {\n      transports: ['websocket', 'polling'] // Enable both transports\n    });\n    newSocket.on('connect', () => {\n      console.log('🔵 Socket connected:', newSocket.id);\n      setConnectionError('');\n    });\n    newSocket.on('connect_error', error => {\n      console.error('🔴 Socket connection error:', error);\n      setConnectionError('Failed to connect to chat server');\n    });\n    newSocket.on('disconnect', reason => {\n      console.log('🔴 Socket disconnected:', reason);\n    });\n    setSocket(newSocket);\n\n    // Load chat messages\n    loadMessages();\n\n    // Join order room after connection is established\n    if (newSocket.connected) {\n      joinOrderRoom(newSocket);\n    } else {\n      newSocket.on('connect', () => {\n        joinOrderRoom(newSocket);\n      });\n    }\n\n    // Listen for new messages\n    newSocket.on('receive_message', message => {\n      console.log('💬 New message received:', message);\n      setMessages(prev => [...prev, message]);\n    });\n\n    // Listen for typing indicators\n    newSocket.on('user_typing', data => {\n      console.log('⌨️ User typing:', data);\n      setTypingUsers(prev => {\n        if (!prev.find(user => user.userId === data.userId)) {\n          return [...prev, data];\n        }\n        return prev;\n      });\n    });\n    newSocket.on('user_stop_typing', data => {\n      console.log('⌨️ User stopped typing:', data);\n      setTypingUsers(prev => prev.filter(user => user.userId !== data.userId));\n    });\n    return () => {\n      console.log('🔴 Cleaning up socket connection');\n      newSocket.disconnect();\n    };\n  }, [order.id]);\n  const joinOrderRoom = socket => {\n    console.log('🟡 Joining order room:', order.id);\n    socket.emit('join_order', order.id);\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, typingUsers]);\n  const loadMessages = async () => {\n    try {\n      console.log('🟡 Loading messages for order:', order.id);\n      const response = await axios.get(`http://localhost:50000/api/chat/messages/${order.id}`);\n      console.log('📨 Loaded messages:', response.data);\n      setMessages(response.data);\n    } catch (error) {\n      console.error('🔴 Error loading messages:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const sendMessage = e => {\n    e.preventDefault();\n    if (!newMessage.trim() || !socket) {\n      console.log('🔴 Cannot send message - no socket or empty message');\n      return;\n    }\n    if (!socket.connected) {\n      setConnectionError('Not connected to chat server. Please try again.');\n      return;\n    }\n    const messageData = {\n      orderId: order.id,\n      senderId: user.id,\n      senderName: user.name,\n      message: newMessage.trim(),\n      messageType: 'text'\n    };\n    console.log('📤 Sending message:', messageData);\n    socket.emit('send_message', messageData);\n    setNewMessage('');\n  };\n  const handleTyping = () => {\n    if (socket && socket.connected) {\n      socket.emit('typing', {\n        orderId: order.id,\n        userId: user.id,\n        userName: user.name\n      });\n\n      // Stop typing after 1 second\n      setTimeout(() => {\n        if (socket && socket.connected) {\n          socket.emit('stop_typing', {\n            orderId: order.id,\n            userId: user.id\n          });\n        }\n      }, 1000);\n    }\n  };\n  const formatTime = timestamp => {\n    return new Date(timestamp).toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const isMyMessage = message => {\n    return message.sender_id === user.id;\n  };\n  const getOtherPartyName = () => {\n    if (user.id === order.buyer_id) {\n      return order.seller_name;\n    } else {\n      return order.buyer_name;\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: \"Loading chat...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content chat-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uD83D\\uDCAC Trade Chat - Order #\", order.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"order-info\",\n            children: [\"Chatting with: \", getOtherPartyName()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"debug-info\",\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [\"Your ID: \", user.id, \" | Order ID: \", order.id, \" | Socket: \", socket !== null && socket !== void 0 && socket.connected ? '🟢 Connected' : '🔴 Disconnected']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), connectionError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: connectionError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-order-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"trade-summary\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [order.amount, \" \", order.currency_from]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"arrow\",\n            children: \"\\u2192\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [order.total_price, \" \", order.currency_to]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"order-status\",\n          children: [\"Status: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `status-${order.status}`,\n            children: order.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-messages\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No messages yet. Start the conversation!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this) : messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${isMyMessage(message) ? 'my-message' : 'other-message'}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-text\",\n              children: message.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-time\",\n              children: [formatTime(message.created_at), !isMyMessage(message) && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"sender-name\",\n                children: [\" \\u2022 \", message.sender_name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 17\n          }, this)\n        }, message.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 15\n        }, this)), typingUsers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"typing-indicator\",\n          children: typingUsers.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"typing-text\",\n            children: [user.userName, \" is typing...\"]\n          }, user.userId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sendMessage,\n        className: \"chat-input-form\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newMessage,\n            onChange: e => {\n              setNewMessage(e.target.value);\n              handleTyping();\n            },\n            placeholder: \"Type your message...\",\n            maxLength: \"500\",\n            disabled: !(socket !== null && socket !== void 0 && socket.connected)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: !newMessage.trim() || !(socket !== null && socket !== void 0 && socket.connected),\n            children: socket !== null && socket !== void 0 && socket.connected ? 'Send' : 'Connecting...'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatModal, \"U/kK5CIgMLCIO7eRdGOuKj6/f3Y=\");\n_c = ChatModal;\nexport default ChatModal;\nvar _c;\n$RefreshReg$(_c, \"ChatModal\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","io","jsxDEV","_jsxDEV","ChatModal","order","user","onClose","_s","messages","setMessages","newMessage","setNewMessage","loading","setLoading","socket","setSocket","typingUsers","setTypingUsers","connectionError","setConnectionError","messagesEndRef","newSocket","transports","on","console","log","id","error","reason","loadMessages","connected","joinOrderRoom","message","prev","data","find","userId","filter","disconnect","emit","scrollToBottom","response","get","_messagesEndRef$curre","current","scrollIntoView","behavior","sendMessage","e","preventDefault","trim","messageData","orderId","senderId","senderName","name","messageType","handleTyping","userName","setTimeout","formatTime","timestamp","Date","toLocaleTimeString","hour","minute","isMyMessage","sender_id","getOtherPartyName","buyer_id","seller_name","buyer_name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","amount","currency_from","total_price","currency_to","status","length","map","created_at","sender_name","ref","onSubmit","type","value","onChange","target","placeholder","maxLength","disabled","_c","$RefreshReg$"],"sources":["/Users/mdkhalidhossain/CST/p2p-exchange/client/src/components/ChatModal.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport io from 'socket.io-client';\n\nconst ChatModal = ({ order, user, onClose }) => {\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [socket, setSocket] = useState(null);\n  const [typingUsers, setTypingUsers] = useState([]);\n  const [connectionError, setConnectionError] = useState('');\n  const messagesEndRef = useRef(null);\n\n  useEffect(() => {\n    // Initialize socket connection\n    const newSocket = io('http://localhost:50000', {\n      transports: ['websocket', 'polling'] // Enable both transports\n    });\n\n    newSocket.on('connect', () => {\n      console.log('🔵 Socket connected:', newSocket.id);\n      setConnectionError('');\n    });\n\n    newSocket.on('connect_error', (error) => {\n      console.error('🔴 Socket connection error:', error);\n      setConnectionError('Failed to connect to chat server');\n    });\n\n    newSocket.on('disconnect', (reason) => {\n      console.log('🔴 Socket disconnected:', reason);\n    });\n\n    setSocket(newSocket);\n\n    // Load chat messages\n    loadMessages();\n\n    // Join order room after connection is established\n    if (newSocket.connected) {\n      joinOrderRoom(newSocket);\n    } else {\n      newSocket.on('connect', () => {\n        joinOrderRoom(newSocket);\n      });\n    }\n\n    // Listen for new messages\n    newSocket.on('receive_message', (message) => {\n      console.log('💬 New message received:', message);\n      setMessages(prev => [...prev, message]);\n    });\n\n    // Listen for typing indicators\n    newSocket.on('user_typing', (data) => {\n      console.log('⌨️ User typing:', data);\n      setTypingUsers(prev => {\n        if (!prev.find(user => user.userId === data.userId)) {\n          return [...prev, data];\n        }\n        return prev;\n      });\n    });\n\n    newSocket.on('user_stop_typing', (data) => {\n      console.log('⌨️ User stopped typing:', data);\n      setTypingUsers(prev => prev.filter(user => user.userId !== data.userId));\n    });\n\n    return () => {\n      console.log('🔴 Cleaning up socket connection');\n      newSocket.disconnect();\n    };\n  }, [order.id]);\n\n  const joinOrderRoom = (socket) => {\n    console.log('🟡 Joining order room:', order.id);\n    socket.emit('join_order', order.id);\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, typingUsers]);\n\n  const loadMessages = async () => {\n    try {\n      console.log('🟡 Loading messages for order:', order.id);\n      const response = await axios.get(`http://localhost:50000/api/chat/messages/${order.id}`);\n      console.log('📨 Loaded messages:', response.data);\n      setMessages(response.data);\n    } catch (error) {\n      console.error('🔴 Error loading messages:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n    if (!newMessage.trim() || !socket) {\n      console.log('🔴 Cannot send message - no socket or empty message');\n      return;\n    }\n\n    if (!socket.connected) {\n      setConnectionError('Not connected to chat server. Please try again.');\n      return;\n    }\n\n    const messageData = {\n      orderId: order.id,\n      senderId: user.id,\n      senderName: user.name,\n      message: newMessage.trim(),\n      messageType: 'text'\n    };\n\n    console.log('📤 Sending message:', messageData);\n    socket.emit('send_message', messageData);\n    setNewMessage('');\n  };\n\n  const handleTyping = () => {\n    if (socket && socket.connected) {\n      socket.emit('typing', {\n        orderId: order.id,\n        userId: user.id,\n        userName: user.name\n      });\n\n      // Stop typing after 1 second\n      setTimeout(() => {\n        if (socket && socket.connected) {\n          socket.emit('stop_typing', {\n            orderId: order.id,\n            userId: user.id\n          });\n        }\n      }, 1000);\n    }\n  };\n\n  const formatTime = (timestamp) => {\n    return new Date(timestamp).toLocaleTimeString([], { \n      hour: '2-digit', \n      minute: '2-digit' \n    });\n  };\n\n  const isMyMessage = (message) => {\n    return message.sender_id === user.id;\n  };\n\n  const getOtherPartyName = () => {\n    if (user.id === order.buyer_id) {\n      return order.seller_name;\n    } else {\n      return order.buyer_name;\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"modal-overlay\">\n        <div className=\"modal-content\">\n          <div className=\"loading\">Loading chat...</div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-content chat-modal\">\n        <div className=\"chat-header\">\n          <div className=\"chat-title\">\n            <h3>💬 Trade Chat - Order #{order.id}</h3>\n            <div className=\"order-info\">\n              Chatting with: {getOtherPartyName()}\n            </div>\n            <div className=\"debug-info\">\n              <small>Your ID: {user.id} | Order ID: {order.id} | Socket: {socket?.connected ? '🟢 Connected' : '🔴 Disconnected'}</small>\n            </div>\n          </div>\n          <button className=\"close-btn\" onClick={onClose}>×</button>\n        </div>\n\n        {connectionError && (\n          <div className=\"error-message\">\n            {connectionError}\n          </div>\n        )}\n\n        <div className=\"chat-order-details\">\n          <div className=\"trade-summary\">\n            <span>{order.amount} {order.currency_from}</span>\n            <span className=\"arrow\">→</span>\n            <span>{order.total_price} {order.currency_to}</span>\n          </div>\n          <div className=\"order-status\">\n            Status: <span className={`status-${order.status}`}>{order.status}</span>\n          </div>\n        </div>\n\n        <div className=\"chat-messages\">\n          {messages.length === 0 ? (\n            <div className=\"no-messages\">\n              <p>No messages yet. Start the conversation!</p>\n            </div>\n          ) : (\n            messages.map((message) => (\n              <div\n                key={message.id}\n                className={`message ${isMyMessage(message) ? 'my-message' : 'other-message'}`}\n              >\n                <div className=\"message-content\">\n                  <div className=\"message-text\">{message.message}</div>\n                  <div className=\"message-time\">\n                    {formatTime(message.created_at)}\n                    {!isMyMessage(message) && (\n                      <span className=\"sender-name\"> • {message.sender_name}</span>\n                    )}\n                  </div>\n                </div>\n              </div>\n            ))\n          )}\n          \n          {typingUsers.length > 0 && (\n            <div className=\"typing-indicator\">\n              {typingUsers.map(user => (\n                <div key={user.userId} className=\"typing-text\">\n                  {user.userName} is typing...\n                </div>\n              ))}\n            </div>\n          )}\n          \n          <div ref={messagesEndRef} />\n        </div>\n\n        <form onSubmit={sendMessage} className=\"chat-input-form\">\n          <div className=\"input-group\">\n            <input\n              type=\"text\"\n              value={newMessage}\n              onChange={(e) => {\n                setNewMessage(e.target.value);\n                handleTyping();\n              }}\n              placeholder=\"Type your message...\"\n              maxLength=\"500\"\n              disabled={!socket?.connected}\n            />\n            <button \n              type=\"submit\" \n              disabled={!newMessage.trim() || !socket?.connected}\n            >\n              {socket?.connected ? 'Send' : 'Connecting...'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}