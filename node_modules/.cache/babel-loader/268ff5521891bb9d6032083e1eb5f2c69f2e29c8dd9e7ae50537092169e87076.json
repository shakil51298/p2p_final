{"ast":null,"code":"var _jsxFileName = \"/Users/mdkhalidhossain/CST/p2p-exchange/client/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect, createContext, useContext } from 'react';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { io } from 'socket.io-client';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Dashboard from './components/Dashboard';\nimport './App.css';\n\n// ✅ CREATE NOTIFICATION CONTEXT\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NotificationContext = /*#__PURE__*/createContext();\n\n// ✅ CUSTOM HOOK FOR NOTIFICATIONS\nexport const useNotifications = () => {\n  _s();\n  const context = useContext(NotificationContext);\n  if (!context) {\n    throw new Error('useNotifications must be used within NotificationProvider');\n  }\n  return context;\n};\n\n// ✅ NOTIFICATION PROVIDER COMPONENT\n_s(useNotifications, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst NotificationProvider = ({\n  children\n}) => {\n  _s2();\n  const [notifications, setNotifications] = useState([]);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [socket, setSocket] = useState(null);\n\n  // Initialize socket connection\n  useEffect(() => {\n    const newSocket = io('http://localhost:50000'); // Your server URL\n    setSocket(newSocket);\n    return () => {\n      newSocket.disconnect();\n    };\n  }, []);\n\n  // Play notification sound\n  const playNotificationSound = () => {\n    // Try to play notification sound (you can add notification.mp3 to public folder)\n    try {\n      const audio = new Audio('/notification.mp3');\n      audio.play().catch(err => console.log('Audio play failed:', err));\n    } catch (error) {\n      console.log('Sound notification skipped');\n    }\n\n    // Fallback: Use browser notification if available\n    if (typeof window.Notification !== 'undefined' && Notification.permission === 'granted') {\n      const notification = new Notification('P2P Exchange', {\n        silent: true\n      });\n      setTimeout(() => notification.close(), 100);\n    }\n  };\n\n  // Add new notification\n  const addNotification = notification => {\n    const newNotification = {\n      id: Date.now(),\n      ...notification,\n      timestamp: new Date(),\n      read: false\n    };\n    setNotifications(prev => [newNotification, ...prev]);\n    setUnreadCount(prev => prev + 1);\n    playNotificationSound();\n\n    // Show browser notification if permitted\n    if (Notification.permission === 'granted') {\n      new Notification(notification.title || 'New Notification', {\n        body: notification.message,\n        icon: '/favicon.ico'\n      });\n    }\n  };\n\n  // Mark notification as read\n  const markAsRead = id => {\n    setNotifications(prev => prev.map(notif => notif.id === id ? {\n      ...notif,\n      read: true\n    } : notif));\n    setUnreadCount(prev => Math.max(0, prev - 1));\n  };\n\n  // Mark all as read\n  const markAllAsRead = () => {\n    setNotifications(prev => prev.map(notif => ({\n      ...notif,\n      read: true\n    })));\n    setUnreadCount(0);\n  };\n\n  // Clear all notifications\n  const clearAll = () => {\n    setNotifications([]);\n    setUnreadCount(0);\n  };\n\n  // Join user notification room\n  const joinUserRoom = userId => {\n    if (socket && userId) {\n      socket.emit('join_user', userId);\n      console.log(`🔔 Frontend: Joined notification room for user ${userId}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(NotificationContext.Provider, {\n    value: {\n      notifications,\n      unreadCount,\n      addNotification,\n      markAsRead,\n      markAllAsRead,\n      clearAll,\n      socket,\n      joinUserRoom\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n\n// ✅ CREATE QUERY CLIENT\n_s2(NotificationProvider, \"y5SaqQbS/PEjVXhMYkCzUx8kkV0=\");\n_c = NotificationProvider;\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false,\n      retry: 1\n    }\n  }\n});\nfunction App() {\n  _s3();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [showLogin, setShowLogin] = useState(true);\n  const [loading, setLoading] = useState(true);\n  const {\n    joinUserRoom,\n    socket,\n    addNotification\n  } = useNotifications();\n\n  // Request notification permission on app start\n  useEffect(() => {\n    if ('Notification' in window && Notification.permission === 'default') {\n      Notification.requestPermission().then(permission => {\n        console.log('Notification permission:', permission);\n      });\n    }\n  }, []);\n\n  // Check if user is already logged in (on app start)\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const userData = localStorage.getItem('user');\n    if (token && userData) {\n      const user = JSON.parse(userData);\n      setCurrentUser(user);\n    }\n    setLoading(false);\n  }, []);\n\n  // Socket.io listeners for real-time notifications\n  useEffect(() => {\n    if (socket && currentUser) {\n      // Join user's notification room when logged in\n      joinUserRoom(currentUser.id);\n\n      // Listen for new orders\n      socket.on('new_order', orderData => {\n        console.log('🔔 New order received:', orderData);\n        addNotification({\n          type: 'new_order',\n          title: '🎉 New Order Received!',\n          message: `New order for: ${orderData.ad_title || 'Your Ad'}`,\n          data: orderData,\n          priority: 'high'\n        });\n      });\n\n      // Listen for order status updates\n      socket.on('order_status_updated', statusData => {\n        console.log('🔔 Order status updated:', statusData);\n        addNotification({\n          type: 'order_status',\n          title: '📦 Order Status Updated',\n          message: `Order #${statusData.order_id} is now ${statusData.status}`,\n          data: statusData,\n          priority: 'medium'\n        });\n      });\n\n      // Listen for chat messages (if you want notifications for new messages)\n      socket.on('receive_message', messageData => {\n        console.log('🔔 New message received:', messageData);\n\n        // Only notify if message is not from current user\n        if (messageData.sender_id !== currentUser.id) {\n          addNotification({\n            type: 'new_message',\n            title: '💬 New Message',\n            message: `New message in order #${messageData.order_id}`,\n            data: messageData,\n            priority: 'low'\n          });\n        }\n      });\n\n      // Handle connection events\n      socket.on('connect', () => {\n        console.log('🔵 Connected to server');\n      });\n      socket.on('disconnect', () => {\n        console.log('🔴 Disconnected from server');\n      });\n      socket.on('connect_error', error => {\n        console.error('🔴 Connection error:', error);\n      });\n    }\n\n    // Cleanup on unmount or when user/socket changes\n    return () => {\n      if (socket) {\n        socket.off('new_order');\n        socket.off('order_status_updated');\n        socket.off('receive_message');\n        socket.off('connect');\n        socket.off('disconnect');\n        socket.off('connect_error');\n      }\n    };\n  }, [socket, currentUser, joinUserRoom, addNotification]);\n  const handleLogin = authData => {\n    setCurrentUser(authData.user);\n    localStorage.setItem('token', authData.token);\n    localStorage.setItem('user', JSON.stringify(authData.user));\n    console.log('User logged in:', authData.user);\n  };\n  const handleLogout = () => {\n    setCurrentUser(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    queryClient.clear();\n    console.log('User logged out');\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(QueryClientProvider, {\n    client: queryClient,\n    children: /*#__PURE__*/_jsxDEV(NotificationProvider, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app\",\n        children: currentUser ? /*#__PURE__*/_jsxDEV(Dashboard, {\n          user: currentUser,\n          onLogout: handleLogout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"\\uD83D\\uDE80 P2P Currency Exchange\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Trade currencies securely with people worldwide\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this), showLogin ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Login, {\n                onLogin: handleLogin\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"auth-switch\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Don't have an account?\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"switch-link\",\n                    onClick: () => setShowLogin(false),\n                    children: \"Sign up here\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Register, {\n                onLogin: handleLogin\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"auth-switch\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Already have an account?\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"switch-link\",\n                    onClick: () => setShowLogin(true),\n                    children: \"Login here\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"features\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Why Choose Our Platform?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"feature-list\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"feature\",\n                  children: \"\\uD83D\\uDD12 Secure Transactions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"feature\",\n                  children: \"\\uD83C\\uDF0D Global Marketplace\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"feature\",\n                  children: \"\\u26A1 Fast Verification\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"feature\",\n                  children: \"\\uD83D\\uDCBC Multiple Payment Methods\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 262,\n    columnNumber: 5\n  }, this);\n}\n_s3(App, \"hzW4lg1zKj6W6Eu4HOfYP3YYum4=\", false, function () {\n  return [useNotifications];\n});\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"NotificationProvider\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","createContext","useContext","QueryClient","QueryClientProvider","io","Login","Register","Dashboard","jsxDEV","_jsxDEV","Fragment","_Fragment","NotificationContext","useNotifications","_s","context","Error","NotificationProvider","children","_s2","notifications","setNotifications","unreadCount","setUnreadCount","socket","setSocket","newSocket","disconnect","playNotificationSound","audio","Audio","play","catch","err","console","log","error","window","Notification","permission","notification","silent","setTimeout","close","addNotification","newNotification","id","Date","now","timestamp","read","prev","title","body","message","icon","markAsRead","map","notif","Math","max","markAllAsRead","clearAll","joinUserRoom","userId","emit","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","queryClient","defaultOptions","queries","refetchOnWindowFocus","retry","App","_s3","currentUser","setCurrentUser","showLogin","setShowLogin","loading","setLoading","requestPermission","then","token","localStorage","getItem","userData","user","JSON","parse","on","orderData","type","ad_title","data","priority","statusData","order_id","status","messageData","sender_id","off","handleLogin","authData","setItem","stringify","handleLogout","removeItem","clear","className","client","onLogout","onLogin","onClick","_c2","$RefreshReg$"],"sources":["/Users/mdkhalidhossain/CST/p2p-exchange/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect, createContext, useContext } from 'react';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { io } from 'socket.io-client';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Dashboard from './components/Dashboard';\nimport './App.css';\n\n// ✅ CREATE NOTIFICATION CONTEXT\nconst NotificationContext = createContext();\n\n// ✅ CUSTOM HOOK FOR NOTIFICATIONS\nexport const useNotifications = () => {\n  const context = useContext(NotificationContext);\n  if (!context) {\n    throw new Error('useNotifications must be used within NotificationProvider');\n  }\n  return context;\n};\n\n// ✅ NOTIFICATION PROVIDER COMPONENT\nconst NotificationProvider = ({ children }) => {\n  const [notifications, setNotifications] = useState([]);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [socket, setSocket] = useState(null);\n\n  // Initialize socket connection\n  useEffect(() => {\n    const newSocket = io('http://localhost:50000'); // Your server URL\n    setSocket(newSocket);\n\n    return () => {\n      newSocket.disconnect();\n    };\n  }, []);\n\n  // Play notification sound\n  const playNotificationSound = () => {\n    // Try to play notification sound (you can add notification.mp3 to public folder)\n    try {\n      const audio = new Audio('/notification.mp3');\n      audio.play().catch(err => console.log('Audio play failed:', err));\n    } catch (error) {\n      console.log('Sound notification skipped');\n    }\n    \n    // Fallback: Use browser notification if available\n    if (typeof window.Notification !== 'undefined' && Notification.permission === 'granted') {\n      const notification = new Notification('P2P Exchange', {\n        silent: true\n      });\n      setTimeout(() => notification.close(), 100);\n    }\n  };\n\n  // Add new notification\n  const addNotification = (notification) => {\n    const newNotification = {\n      id: Date.now(),\n      ...notification,\n      timestamp: new Date(),\n      read: false\n    };\n    \n    setNotifications(prev => [newNotification, ...prev]);\n    setUnreadCount(prev => prev + 1);\n    playNotificationSound();\n    \n    // Show browser notification if permitted\n    if (Notification.permission === 'granted') {\n      new Notification(notification.title || 'New Notification', {\n        body: notification.message,\n        icon: '/favicon.ico'\n      });\n    }\n  };\n\n  // Mark notification as read\n  const markAsRead = (id) => {\n    setNotifications(prev =>\n      prev.map(notif =>\n        notif.id === id ? { ...notif, read: true } : notif\n      )\n    );\n    setUnreadCount(prev => Math.max(0, prev - 1));\n  };\n\n  // Mark all as read\n  const markAllAsRead = () => {\n    setNotifications(prev => prev.map(notif => ({ ...notif, read: true })));\n    setUnreadCount(0);\n  };\n\n  // Clear all notifications\n  const clearAll = () => {\n    setNotifications([]);\n    setUnreadCount(0);\n  };\n\n  // Join user notification room\n  const joinUserRoom = (userId) => {\n    if (socket && userId) {\n      socket.emit('join_user', userId);\n      console.log(`🔔 Frontend: Joined notification room for user ${userId}`);\n    }\n  };\n\n  return (\n    <NotificationContext.Provider value={{\n      notifications,\n      unreadCount,\n      addNotification,\n      markAsRead,\n      markAllAsRead,\n      clearAll,\n      socket,\n      joinUserRoom\n    }}>\n      {children}\n    </NotificationContext.Provider>\n  );\n};\n\n// ✅ CREATE QUERY CLIENT\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false,\n      retry: 1,\n    },\n  },\n});\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [showLogin, setShowLogin] = useState(true);\n  const [loading, setLoading] = useState(true);\n  const { joinUserRoom, socket, addNotification } = useNotifications();\n\n  // Request notification permission on app start\n  useEffect(() => {\n    if ('Notification' in window && Notification.permission === 'default') {\n      Notification.requestPermission().then(permission => {\n        console.log('Notification permission:', permission);\n      });\n    }\n  }, []);\n\n  // Check if user is already logged in (on app start)\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const userData = localStorage.getItem('user');\n    \n    if (token && userData) {\n      const user = JSON.parse(userData);\n      setCurrentUser(user);\n    }\n    setLoading(false);\n  }, []);\n\n  // Socket.io listeners for real-time notifications\n  useEffect(() => {\n    if (socket && currentUser) {\n      // Join user's notification room when logged in\n      joinUserRoom(currentUser.id);\n\n      // Listen for new orders\n      socket.on('new_order', (orderData) => {\n        console.log('🔔 New order received:', orderData);\n        \n        addNotification({\n          type: 'new_order',\n          title: '🎉 New Order Received!',\n          message: `New order for: ${orderData.ad_title || 'Your Ad'}`,\n          data: orderData,\n          priority: 'high'\n        });\n      });\n\n      // Listen for order status updates\n      socket.on('order_status_updated', (statusData) => {\n        console.log('🔔 Order status updated:', statusData);\n        \n        addNotification({\n          type: 'order_status',\n          title: '📦 Order Status Updated',\n          message: `Order #${statusData.order_id} is now ${statusData.status}`,\n          data: statusData,\n          priority: 'medium'\n        });\n      });\n\n      // Listen for chat messages (if you want notifications for new messages)\n      socket.on('receive_message', (messageData) => {\n        console.log('🔔 New message received:', messageData);\n        \n        // Only notify if message is not from current user\n        if (messageData.sender_id !== currentUser.id) {\n          addNotification({\n            type: 'new_message',\n            title: '💬 New Message',\n            message: `New message in order #${messageData.order_id}`,\n            data: messageData,\n            priority: 'low'\n          });\n        }\n      });\n\n      // Handle connection events\n      socket.on('connect', () => {\n        console.log('🔵 Connected to server');\n      });\n\n      socket.on('disconnect', () => {\n        console.log('🔴 Disconnected from server');\n      });\n\n      socket.on('connect_error', (error) => {\n        console.error('🔴 Connection error:', error);\n      });\n    }\n\n    // Cleanup on unmount or when user/socket changes\n    return () => {\n      if (socket) {\n        socket.off('new_order');\n        socket.off('order_status_updated');\n        socket.off('receive_message');\n        socket.off('connect');\n        socket.off('disconnect');\n        socket.off('connect_error');\n      }\n    };\n  }, [socket, currentUser, joinUserRoom, addNotification]);\n\n  const handleLogin = (authData) => {\n    setCurrentUser(authData.user);\n    localStorage.setItem('token', authData.token);\n    localStorage.setItem('user', JSON.stringify(authData.user));\n    console.log('User logged in:', authData.user);\n  };\n\n  const handleLogout = () => {\n    setCurrentUser(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    queryClient.clear();\n    console.log('User logged out');\n  };\n\n  if (loading) {\n    return (\n      <div className=\"app\">\n        <div className=\"container\">\n          <div className=\"loading\">Loading...</div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <NotificationProvider>\n        <div className=\"app\">\n          {currentUser ? (\n            <Dashboard user={currentUser} onLogout={handleLogout} />\n          ) : (\n            <div className=\"container\">\n              <div className=\"auth-container\">\n                <div className=\"auth-header\">\n                  <h1>🚀 P2P Currency Exchange</h1>\n                  <p>Trade currencies securely with people worldwide</p>\n                </div>\n\n                {showLogin ? (\n                  <>\n                    <Login onLogin={handleLogin} />\n                    <div className=\"auth-switch\">\n                      <p>Don't have an account?{' '}\n                        <span className=\"switch-link\" onClick={() => setShowLogin(false)}>\n                          Sign up here\n                        </span>\n                      </p>\n                    </div>\n                  </>\n                ) : (\n                  <>\n                    <Register onLogin={handleLogin} />\n                    <div className=\"auth-switch\">\n                      <p>Already have an account?{' '}\n                        <span className=\"switch-link\" onClick={() => setShowLogin(true)}>\n                          Login here\n                        </span>\n                      </p>\n                    </div>\n                  </>\n                )}\n\n                <div className=\"features\">\n                  <h3>Why Choose Our Platform?</h3>\n                  <div className=\"feature-list\">\n                    <div className=\"feature\">🔒 Secure Transactions</div>\n                    <div className=\"feature\">🌍 Global Marketplace</div>\n                    <div className=\"feature\">⚡ Fast Verification</div>\n                    <div className=\"feature\">💼 Multiple Payment Methods</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </NotificationProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}